{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\recipeapp\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchBy, setSearchBy] = useState('name'); // 'name', 'ingredient', 'cuisine'\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // New state for ingredient-based search\n  const [ingredients, setIngredients] = useState(['']);\n  const [apiKey, setApiKey] = useState(''); // You'll need to get an API key from Spoonacular\n\n  // For demo purposes, we'll use a mock API call\n  const searchRecipes = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      // In a real app, you would use an actual API like:\n      // const response = await axios.get(`https://api.spoonacular.com/recipes/complexSearch?query=${searchTerm}&apiKey=YOUR_API_KEY`);\n\n      // For demo, we'll simulate an API response\n      setTimeout(() => {\n        const mockRecipes = [{\n          id: 1,\n          title: 'Spaghetti Carbonara',\n          image: 'https://images.unsplash.com/photo-1612874742237-6526221588e3?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1771&q=80',\n          readyInMinutes: 30,\n          servings: 4,\n          cuisines: ['Italian']\n        }, {\n          id: 2,\n          title: 'Chicken Tikka Masala',\n          image: 'https://images.unsplash.com/photo-1565557623262-b51c2513a641?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1771&q=80',\n          readyInMinutes: 45,\n          servings: 6,\n          cuisines: ['Indian']\n        }, {\n          id: 3,\n          title: 'Beef Tacos',\n          image: 'https://images.unsplash.com/photo-1551504734-5ee1c4a1479b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1770&q=80',\n          readyInMinutes: 25,\n          servings: 4,\n          cuisines: ['Mexican']\n        }, {\n          id: 4,\n          title: 'Vegetable Stir Fry',\n          image: 'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1770&q=80',\n          readyInMinutes: 20,\n          servings: 2,\n          cuisines: ['Asian', 'Chinese']\n        }];\n\n        // Filter based on search term (case insensitive)\n        const filteredRecipes = mockRecipes.filter(recipe => {\n          const term = searchTerm.toLowerCase();\n          if (searchBy === 'name') {\n            return recipe.title.toLowerCase().includes(term);\n          } else if (searchBy === 'cuisine') {\n            return recipe.cuisines.some(cuisine => cuisine.toLowerCase().includes(term));\n          }\n          // For ingredients, we would need ingredient data in a real app\n          return true;\n        });\n        setRecipes(filteredRecipes);\n        setLoading(false);\n      }, 1000); // Simulate network delay\n    } catch (err) {\n      setError('Failed to fetch recipes. Please try again.');\n      setLoading(false);\n      console.error('Error fetching recipes:', err);\n    }\n  };\n\n  // New function to search recipes by ingredients using Spoonacular API\n  const searchByIngredients = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    // Filter out empty ingredients\n    const filteredIngredients = ingredients.filter(ing => ing.trim() !== '');\n    if (filteredIngredients.length === 0) {\n      setError('Please enter at least one ingredient');\n      setLoading(false);\n      return;\n    }\n    try {\n      // For a real implementation, uncomment this code and add your API key\n      if (!apiKey) {\n        // For demo purposes, we'll use mock data if no API key is provided\n        setTimeout(() => {\n          const mockRecipes = [{\n            id: 1,\n            title: 'Pasta with Garlic and Olive Oil',\n            image: 'https://images.unsplash.com/photo-1621996346565-e3dbc646d9a9?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=880&q=80',\n            usedIngredientCount: 2,\n            missedIngredientCount: 0,\n            likes: 209,\n            readyInMinutes: 20,\n            servings: 2,\n            cuisines: ['Italian']\n          }, {\n            id: 2,\n            title: 'Garlic Butter Shrimp',\n            image: 'https://images.unsplash.com/photo-1625944525533-473f1a3d54e7?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=880&q=80',\n            usedIngredientCount: 1,\n            missedIngredientCount: 2,\n            likes: 180,\n            readyInMinutes: 15,\n            servings: 4,\n            cuisines: ['American', 'Seafood']\n          }];\n          setRecipes(mockRecipes);\n          setLoading(false);\n        }, 1000);\n        return;\n      }\n\n      // Real API call to Spoonacular\n      const ingredientString = filteredIngredients.join(',');\n      const response = await axios.get(`https://api.spoonacular.com/recipes/findByIngredients`, {\n        params: {\n          ingredients: ingredientString,\n          number: 10,\n          // Number of results to return\n          ranking: 1,\n          // 1 = maximize used ingredients, 2 = minimize missing ingredients\n          ignorePantry: true,\n          // Ignore typical pantry items like salt, oil, etc.\n          apiKey: apiKey\n        }\n      });\n\n      // Transform the response to match our recipe card format\n      const formattedRecipes = response.data.map(recipe => ({\n        id: recipe.id,\n        title: recipe.title,\n        image: recipe.image,\n        readyInMinutes: recipe.readyInMinutes || 30,\n        // Default value if not provided\n        servings: recipe.servings || 4,\n        // Default value if not provided\n        cuisines: [],\n        // API doesn't return cuisines in this endpoint\n        usedIngredientCount: recipe.usedIngredientCount,\n        missedIngredientCount: recipe.missedIngredientCount,\n        likes: recipe.likes\n      }));\n      setRecipes(formattedRecipes);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch recipes. Please check your API key or try again later.');\n      setLoading(false);\n      console.error('Error fetching recipes by ingredients:', err);\n    }\n  };\n\n  // Handle adding a new ingredient input field\n  const addIngredientField = () => {\n    setIngredients([...ingredients, '']);\n  };\n\n  // Handle removing an ingredient input field\n  const removeIngredientField = index => {\n    const newIngredients = [...ingredients];\n    newIngredients.splice(index, 1);\n    setIngredients(newIngredients);\n  };\n\n  // Handle ingredient input change\n  const handleIngredientChange = (index, value) => {\n    const newIngredients = [...ingredients];\n    newIngredients[index] = value;\n    setIngredients(newIngredients);\n  };\n\n  // Handle API key input change\n  const handleApiKeyChange = e => {\n    setApiKey(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Find Your Perfect Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Search thousands of recipes by name, ingredients, or cuisine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: searchRecipes,\n        className: \"search-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"searchBy\",\n              value: \"name\",\n              checked: searchBy === 'name',\n              onChange: () => setSearchBy('name')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), \"Recipe Name\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"searchBy\",\n              value: \"ingredient\",\n              checked: searchBy === 'ingredient',\n              onChange: () => setSearchBy('ingredient')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), \"Ingredient\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"searchBy\",\n              value: \"cuisine\",\n              checked: searchBy === 'cuisine',\n              onChange: () => setSearchBy('cuisine')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), \"Cuisine\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: `Search by ${searchBy}...`,\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            required: true,\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"search-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), \" Search\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ingredient-search-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Or Find Recipes By Available Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: searchByIngredients,\n          className: \"ingredient-search-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"api-key-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter your Spoonacular API Key (optional for demo)\",\n              value: apiKey,\n              onChange: handleApiKeyChange,\n              className: \"api-key-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Get a free API key at \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://spoonacular.com/food-api\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: \"spoonacular.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredients-container\",\n            children: [ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredient-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: `Ingredient ${index + 1} (e.g., apple, flour, chicken)`,\n                value: ingredient,\n                onChange: e => handleIngredientChange(index, e.target.value),\n                className: \"ingredient-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), ingredients.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => removeIngredientField(index),\n                className: \"remove-ingredient-btn\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: addIngredientField,\n              className: \"add-ingredient-btn\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), \" Add Ingredient\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"search-button ingredient-search-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-utensils\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), \" Find Recipes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-spinner fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), \" Loading recipes...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this) : recipes.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-grid\",\n          children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card recipe-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: recipe.image,\n              alt: recipe.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: recipe.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-clock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 27\n                }, this), \" \", recipe.readyInMinutes, \" mins\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-utensils\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 27\n                }, this), \" \", recipe.servings, \" servings\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this), recipe.usedIngredientCount !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredient-match-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"used-ingredients\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-check\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 25\n                }, this), \" \", recipe.usedIngredientCount, \" ingredients used\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"missing-ingredients\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 25\n                }, this), \" \", recipe.missedIngredientCount, \" ingredients missing\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 21\n            }, this), recipe.cuisines && recipe.cuisines.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-cuisines\",\n              children: recipe.cuisines.map((cuisine, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"cuisine-tag\",\n                children: cuisine\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/recipe/${recipe.id}`,\n              className: \"btn\",\n              children: \"View Recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 19\n            }, this)]\n          }, recipe.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : searchTerm || ingredients.some(ing => ing.trim() !== '') ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No recipes found. Try different ingredients or search terms.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"qo0ZgILsR9age2NfvLAdP6f45ps=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Link","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","searchTerm","setSearchTerm","searchBy","setSearchBy","recipes","setRecipes","loading","setLoading","error","setError","ingredients","setIngredients","apiKey","setApiKey","searchRecipes","e","preventDefault","setTimeout","mockRecipes","id","title","image","readyInMinutes","servings","cuisines","filteredRecipes","filter","recipe","term","toLowerCase","includes","some","cuisine","err","console","searchByIngredients","filteredIngredients","ing","trim","length","usedIngredientCount","missedIngredientCount","likes","ingredientString","join","response","get","params","number","ranking","ignorePantry","formattedRecipes","data","map","addIngredientField","removeIngredientField","index","newIngredients","splice","handleIngredientChange","value","handleApiKeyChange","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","checked","onChange","placeholder","required","href","rel","ingredient","onClick","src","alt","undefined","to","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/recipeapp/src/pages/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchBy, setSearchBy] = useState('name'); // 'name', 'ingredient', 'cuisine'\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // New state for ingredient-based search\r\n  const [ingredients, setIngredients] = useState(['']);\r\n  const [apiKey, setApiKey] = useState(''); // You'll need to get an API key from Spoonacular\r\n\r\n  // For demo purposes, we'll use a mock API call\r\n  const searchRecipes = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // In a real app, you would use an actual API like:\r\n      // const response = await axios.get(`https://api.spoonacular.com/recipes/complexSearch?query=${searchTerm}&apiKey=YOUR_API_KEY`);\r\n      \r\n      // For demo, we'll simulate an API response\r\n      setTimeout(() => {\r\n        const mockRecipes = [\r\n          {\r\n            id: 1,\r\n            title: 'Spaghetti Carbonara',\r\n            image: 'https://images.unsplash.com/photo-1612874742237-6526221588e3?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1771&q=80',\r\n            readyInMinutes: 30,\r\n            servings: 4,\r\n            cuisines: ['Italian'],\r\n          },\r\n          {\r\n            id: 2,\r\n            title: 'Chicken Tikka Masala',\r\n            image: 'https://images.unsplash.com/photo-1565557623262-b51c2513a641?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1771&q=80',\r\n            readyInMinutes: 45,\r\n            servings: 6,\r\n            cuisines: ['Indian'],\r\n          },\r\n          {\r\n            id: 3,\r\n            title: 'Beef Tacos',\r\n            image: 'https://images.unsplash.com/photo-1551504734-5ee1c4a1479b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1770&q=80',\r\n            readyInMinutes: 25,\r\n            servings: 4,\r\n            cuisines: ['Mexican'],\r\n          },\r\n          {\r\n            id: 4,\r\n            title: 'Vegetable Stir Fry',\r\n            image: 'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1770&q=80',\r\n            readyInMinutes: 20,\r\n            servings: 2,\r\n            cuisines: ['Asian', 'Chinese'],\r\n          },\r\n        ];\r\n\r\n        // Filter based on search term (case insensitive)\r\n        const filteredRecipes = mockRecipes.filter(recipe => {\r\n          const term = searchTerm.toLowerCase();\r\n          if (searchBy === 'name') {\r\n            return recipe.title.toLowerCase().includes(term);\r\n          } else if (searchBy === 'cuisine') {\r\n            return recipe.cuisines.some(cuisine => cuisine.toLowerCase().includes(term));\r\n          }\r\n          // For ingredients, we would need ingredient data in a real app\r\n          return true;\r\n        });\r\n\r\n        setRecipes(filteredRecipes);\r\n        setLoading(false);\r\n      }, 1000); // Simulate network delay\r\n\r\n    } catch (err) {\r\n      setError('Failed to fetch recipes. Please try again.');\r\n      setLoading(false);\r\n      console.error('Error fetching recipes:', err);\r\n    }\r\n  };\r\n\r\n  // New function to search recipes by ingredients using Spoonacular API\r\n  const searchByIngredients = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    // Filter out empty ingredients\r\n    const filteredIngredients = ingredients.filter(ing => ing.trim() !== '');\r\n    \r\n    if (filteredIngredients.length === 0) {\r\n      setError('Please enter at least one ingredient');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // For a real implementation, uncomment this code and add your API key\r\n      if (!apiKey) {\r\n        // For demo purposes, we'll use mock data if no API key is provided\r\n        setTimeout(() => {\r\n          const mockRecipes = [\r\n            {\r\n              id: 1,\r\n              title: 'Pasta with Garlic and Olive Oil',\r\n              image: 'https://images.unsplash.com/photo-1621996346565-e3dbc646d9a9?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=880&q=80',\r\n              usedIngredientCount: 2,\r\n              missedIngredientCount: 0,\r\n              likes: 209,\r\n              readyInMinutes: 20,\r\n              servings: 2,\r\n              cuisines: ['Italian'],\r\n            },\r\n            {\r\n              id: 2,\r\n              title: 'Garlic Butter Shrimp',\r\n              image: 'https://images.unsplash.com/photo-1625944525533-473f1a3d54e7?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=880&q=80',\r\n              usedIngredientCount: 1,\r\n              missedIngredientCount: 2,\r\n              likes: 180,\r\n              readyInMinutes: 15,\r\n              servings: 4,\r\n              cuisines: ['American', 'Seafood'],\r\n            },\r\n          ];\r\n          \r\n          setRecipes(mockRecipes);\r\n          setLoading(false);\r\n        }, 1000);\r\n        return;\r\n      }\r\n      \r\n      // Real API call to Spoonacular\r\n      const ingredientString = filteredIngredients.join(',');\r\n      const response = await axios.get(\r\n        `https://api.spoonacular.com/recipes/findByIngredients`,\r\n        {\r\n          params: {\r\n            ingredients: ingredientString,\r\n            number: 10, // Number of results to return\r\n            ranking: 1, // 1 = maximize used ingredients, 2 = minimize missing ingredients\r\n            ignorePantry: true, // Ignore typical pantry items like salt, oil, etc.\r\n            apiKey: apiKey\r\n          }\r\n        }\r\n      );\r\n      \r\n      // Transform the response to match our recipe card format\r\n      const formattedRecipes = response.data.map(recipe => ({\r\n        id: recipe.id,\r\n        title: recipe.title,\r\n        image: recipe.image,\r\n        readyInMinutes: recipe.readyInMinutes || 30, // Default value if not provided\r\n        servings: recipe.servings || 4, // Default value if not provided\r\n        cuisines: [], // API doesn't return cuisines in this endpoint\r\n        usedIngredientCount: recipe.usedIngredientCount,\r\n        missedIngredientCount: recipe.missedIngredientCount,\r\n        likes: recipe.likes\r\n      }));\r\n      \r\n      setRecipes(formattedRecipes);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Failed to fetch recipes. Please check your API key or try again later.');\r\n      setLoading(false);\r\n      console.error('Error fetching recipes by ingredients:', err);\r\n    }\r\n  };\r\n\r\n  // Handle adding a new ingredient input field\r\n  const addIngredientField = () => {\r\n    setIngredients([...ingredients, '']);\r\n  };\r\n\r\n  // Handle removing an ingredient input field\r\n  const removeIngredientField = (index) => {\r\n    const newIngredients = [...ingredients];\r\n    newIngredients.splice(index, 1);\r\n    setIngredients(newIngredients);\r\n  };\r\n\r\n  // Handle ingredient input change\r\n  const handleIngredientChange = (index, value) => {\r\n    const newIngredients = [...ingredients];\r\n    newIngredients[index] = value;\r\n    setIngredients(newIngredients);\r\n  };\r\n\r\n  // Handle API key input change\r\n  const handleApiKeyChange = (e) => {\r\n    setApiKey(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <div className=\"hero\">\r\n        <h1>Find Your Perfect Recipe</h1>\r\n        <p>Search thousands of recipes by name, ingredients, or cuisine</p>\r\n        \r\n        {/* Original search form */}\r\n        <form onSubmit={searchRecipes} className=\"search-form\">\r\n          <div className=\"search-options\">\r\n            <label>\r\n              <input \r\n                type=\"radio\" \r\n                name=\"searchBy\" \r\n                value=\"name\" \r\n                checked={searchBy === 'name'}\r\n                onChange={() => setSearchBy('name')} \r\n              />\r\n              Recipe Name\r\n            </label>\r\n            <label>\r\n              <input \r\n                type=\"radio\" \r\n                name=\"searchBy\" \r\n                value=\"ingredient\" \r\n                checked={searchBy === 'ingredient'}\r\n                onChange={() => setSearchBy('ingredient')} \r\n              />\r\n              Ingredient\r\n            </label>\r\n            <label>\r\n              <input \r\n                type=\"radio\" \r\n                name=\"searchBy\" \r\n                value=\"cuisine\" \r\n                checked={searchBy === 'cuisine'}\r\n                onChange={() => setSearchBy('cuisine')} \r\n              />\r\n              Cuisine\r\n            </label>\r\n          </div>\r\n          \r\n          <div className=\"search-input-container\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder={`Search by ${searchBy}...`}\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              required\r\n              className=\"search-input\"\r\n            />\r\n            <button type=\"submit\" className=\"search-button\">\r\n              <i className=\"fas fa-search\"></i> Search\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        {/* New ingredient-based search form */}\r\n        <div className=\"ingredient-search-section\">\r\n          <h2>Or Find Recipes By Available Ingredients</h2>\r\n          <form onSubmit={searchByIngredients} className=\"ingredient-search-form\">\r\n            <div className=\"api-key-input\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter your Spoonacular API Key (optional for demo)\"\r\n                value={apiKey}\r\n                onChange={handleApiKeyChange}\r\n                className=\"api-key-field\"\r\n              />\r\n              <small>Get a free API key at <a href=\"https://spoonacular.com/food-api\" target=\"_blank\" rel=\"noopener noreferrer\">spoonacular.com</a></small>\r\n            </div>\r\n            \r\n            <div className=\"ingredients-container\">\r\n              {ingredients.map((ingredient, index) => (\r\n                <div key={index} className=\"ingredient-input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder={`Ingredient ${index + 1} (e.g., apple, flour, chicken)`}\r\n                    value={ingredient}\r\n                    onChange={(e) => handleIngredientChange(index, e.target.value)}\r\n                    className=\"ingredient-input\"\r\n                  />\r\n                  {ingredients.length > 1 && (\r\n                    <button \r\n                      type=\"button\" \r\n                      onClick={() => removeIngredientField(index)}\r\n                      className=\"remove-ingredient-btn\"\r\n                    >\r\n                      <i className=\"fas fa-times\"></i>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              ))}\r\n              <button \r\n                type=\"button\" \r\n                onClick={addIngredientField}\r\n                className=\"add-ingredient-btn\"\r\n              >\r\n                <i className=\"fas fa-plus\"></i> Add Ingredient\r\n              </button>\r\n            </div>\r\n            \r\n            <button type=\"submit\" className=\"search-button ingredient-search-btn\">\r\n              <i className=\"fas fa-utensils\"></i> Find Recipes\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"search-results\">\r\n        {loading ? (\r\n          <div className=\"loading\">\r\n            <i className=\"fas fa-spinner fa-spin\"></i> Loading recipes...\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"error\">{error}</div>\r\n        ) : recipes.length > 0 ? (\r\n          <>\r\n            <h2>Search Results</h2>\r\n            <div className=\"recipe-grid\">\r\n              {recipes.map((recipe) => (\r\n                <div key={recipe.id} className=\"card recipe-card\">\r\n                  <img src={recipe.image} alt={recipe.title} />\r\n                  <h3>{recipe.title}</h3>\r\n                  <div className=\"recipe-info\">\r\n                    <span><i className=\"far fa-clock\"></i> {recipe.readyInMinutes} mins</span>\r\n                    <span><i className=\"fas fa-utensils\"></i> {recipe.servings} servings</span>\r\n                  </div>\r\n                  {recipe.usedIngredientCount !== undefined && (\r\n                    <div className=\"ingredient-match-info\">\r\n                      <span className=\"used-ingredients\">\r\n                        <i className=\"fas fa-check\"></i> {recipe.usedIngredientCount} ingredients used\r\n                      </span>\r\n                      <span className=\"missing-ingredients\">\r\n                        <i className=\"fas fa-times\"></i> {recipe.missedIngredientCount} ingredients missing\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {recipe.cuisines && recipe.cuisines.length > 0 && (\r\n                    <div className=\"recipe-cuisines\">\r\n                      {recipe.cuisines.map((cuisine, index) => (\r\n                        <span key={index} className=\"cuisine-tag\">{cuisine}</span>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                  <Link to={`/recipe/${recipe.id}`} className=\"btn\">\r\n                    View Recipe\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        ) : searchTerm || ingredients.some(ing => ing.trim() !== '') ? (\r\n          <div className=\"no-results\">\r\n            <i className=\"fas fa-search\"></i>\r\n            <p>No recipes found. Try different ingredients or search terms.</p>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
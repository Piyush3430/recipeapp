{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\recipeapp\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './Home.css';\nimport commonIngredients from '../data/commonIngredients';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchBy, setSearchBy] = useState('name'); // 'name', 'ingredient', 'cuisine'\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // State for ingredient-based search\n  const [ingredients, setIngredients] = useState(['']);\n  // TheMealDB doesn't require an API key for the free tier\n\n  // For demo purposes, we'll use a mock API call\n  const searchRecipes = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      // In a real app, you would use an actual API like:\n      // const response = await axios.get(`https://api.spoonacular.com/recipes/complexSearch?query=${searchTerm}&apiKey=YOUR_API_KEY`);\n\n      // For demo, we'll simulate an API response\n      setTimeout(() => {\n        const mockRecipes = [{\n          id: 1,\n          title: 'Spaghetti Carbonara',\n          image: 'https://images.unsplash.com/photo-1612874742237-6526221588e3?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1771&q=80',\n          readyInMinutes: 30,\n          servings: 4,\n          cuisines: ['Italian']\n        }, {\n          id: 2,\n          title: 'Chicken Tikka Masala',\n          image: 'https://images.unsplash.com/photo-1565557623262-b51c2513a641?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1771&q=80',\n          readyInMinutes: 45,\n          servings: 6,\n          cuisines: ['Indian']\n        }, {\n          id: 3,\n          title: 'Beef Tacos',\n          image: 'https://images.unsplash.com/photo-1551504734-5ee1c4a1479b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1770&q=80',\n          readyInMinutes: 25,\n          servings: 4,\n          cuisines: ['Mexican']\n        }, {\n          id: 4,\n          title: 'Vegetable Stir Fry',\n          image: 'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1770&q=80',\n          readyInMinutes: 20,\n          servings: 2,\n          cuisines: ['Asian', 'Chinese']\n        }];\n\n        // Filter based on search term (case insensitive)\n        const filteredRecipes = mockRecipes.filter(recipe => {\n          const term = searchTerm.toLowerCase();\n          if (searchBy === 'name') {\n            return recipe.title.toLowerCase().includes(term);\n          } else if (searchBy === 'cuisine') {\n            return recipe.cuisines.some(cuisine => cuisine.toLowerCase().includes(term));\n          }\n          // For ingredients, we would need ingredient data in a real app\n          return true;\n        });\n        setRecipes(filteredRecipes);\n        setLoading(false);\n      }, 1000); // Simulate network delay\n    } catch (err) {\n      setError('Failed to fetch recipes. Please try again.');\n      setLoading(false);\n      console.error('Error fetching recipes:', err);\n    }\n  };\n\n  // Function to search recipes by ingredients using TheMealDB API\n  const searchByIngredients = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    // Filter out empty ingredients\n    const filteredIngredients = ingredients.filter(ing => ing.trim() !== '');\n    if (filteredIngredients.length === 0) {\n      setError('Please enter at least one ingredient');\n      setLoading(false);\n      return;\n    }\n    try {\n      let allRecipes = [];\n      let uniqueRecipeIds = new Set();\n\n      // Create an array of promises for parallel API calls\n      const searchPromises = filteredIngredients.map(ingredient => {\n        // Use search.php endpoint which searches meal names\n        return axios.get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${encodeURIComponent(ingredient)}`);\n      });\n\n      // Execute all API calls in parallel\n      const responses = await Promise.all(searchPromises);\n\n      // Process all responses\n      responses.forEach((response, index) => {\n        if (response.data.meals) {\n          response.data.meals.forEach(meal => {\n            // Only add if we haven't seen this recipe before\n            if (!uniqueRecipeIds.has(meal.idMeal)) {\n              uniqueRecipeIds.add(meal.idMeal);\n\n              // Add the ingredient that matched this recipe\n              allRecipes.push({\n                id: meal.idMeal,\n                title: meal.strMeal,\n                image: meal.strMealThumb,\n                readyInMinutes: 30,\n                // Default value\n                servings: 4,\n                // Default value\n                cuisines: [],\n                // TheMealDB doesn't provide cuisines in this endpoint\n                matchedIngredients: [filteredIngredients[index]],\n                usedIngredientCount: 1,\n                missedIngredientCount: 0\n              });\n            } else {\n              // If we've seen this recipe before, update the matched ingredients\n              const existingRecipe = allRecipes.find(r => r.id === meal.idMeal);\n              if (existingRecipe) {\n                existingRecipe.matchedIngredients.push(filteredIngredients[index]);\n                existingRecipe.usedIngredientCount = existingRecipe.matchedIngredients.length;\n              }\n            }\n          });\n        }\n      });\n\n      // Sort recipes by number of matched ingredients (descending)\n      allRecipes.sort((a, b) => b.usedIngredientCount - a.usedIngredientCount);\n      if (allRecipes.length === 0) {\n        setError(`No recipes found with the provided ingredients. Try different ingredients.`);\n        setLoading(false);\n        return;\n      }\n      setRecipes(allRecipes);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch recipes. Please try again later.');\n      setLoading(false);\n      console.error('Error fetching recipes by ingredients:', err);\n    }\n  };\n\n  // Handle adding a new ingredient input field\n  const addIngredientField = () => {\n    setIngredients([...ingredients, '']);\n    setInputValues([...inputValues, '']);\n  };\n\n  // Handle removing an ingredient input field\n  const removeIngredientField = index => {\n    const newIngredients = [...ingredients];\n    newIngredients.splice(index, 1);\n    setIngredients(newIngredients);\n    const newInputValues = [...inputValues];\n    newInputValues.splice(index, 1);\n    setInputValues(newInputValues);\n  };\n\n  // Handle ingredient input change\n  const handleIngredientChange = (index, value) => {\n    const newIngredients = [...ingredients];\n    newIngredients[index] = value;\n    setIngredients(newIngredients);\n  };\n\n  // Filter ingredients for dropdown based on input\n  const [filteredIngredients, setFilteredIngredients] = useState([]);\n  const [inputValues, setInputValues] = useState(['']);\n  const [activeDropdownIndex, setActiveDropdownIndex] = useState(null);\n  const handleIngredientInput = (index, value) => {\n    const newInputValues = [...inputValues];\n    newInputValues[index] = value;\n    setInputValues(newInputValues);\n\n    // Update the actual ingredient value\n    handleIngredientChange(index, value);\n\n    // Filter ingredients based on input\n    if (value.trim() === '') {\n      setFilteredIngredients([]);\n    } else {\n      const filtered = commonIngredients.filter(ingredient => ingredient.toLowerCase().includes(value.toLowerCase())).slice(0, 5); // Limit to 5 suggestions\n      setFilteredIngredients(filtered);\n      setActiveDropdownIndex(index);\n    }\n  };\n  const selectIngredient = (index, ingredient) => {\n    handleIngredientChange(index, ingredient);\n    const newInputValues = [...inputValues];\n    newInputValues[index] = ingredient;\n    setInputValues(newInputValues);\n    setFilteredIngredients([]);\n    setActiveDropdownIndex(null);\n  };\n\n  // Handle keyboard navigation for dropdown\n  const [selectedSuggestionIndex, setSelectedSuggestionIndex] = useState(-1);\n  const handleKeyDown = (e, index) => {\n    if (filteredIngredients.length > 0 && activeDropdownIndex === index) {\n      switch (e.key) {\n        case 'ArrowDown':\n          e.preventDefault();\n          setSelectedSuggestionIndex(prev => prev < filteredIngredients.length - 1 ? prev + 1 : prev);\n          break;\n        case 'ArrowUp':\n          e.preventDefault();\n          setSelectedSuggestionIndex(prev => prev > 0 ? prev - 1 : 0);\n          break;\n        case 'Enter':\n          if (selectedSuggestionIndex >= 0) {\n            e.preventDefault();\n            selectIngredient(index, filteredIngredients[selectedSuggestionIndex]);\n            setSelectedSuggestionIndex(-1);\n          }\n          break;\n        case 'Escape':\n          setFilteredIngredients([]);\n          setActiveDropdownIndex(null);\n          setSelectedSuggestionIndex(-1);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  // We no longer need the API key handler since TheMealDB doesn't require an API key\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Find Your Perfect Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Search thousands of recipes by name, ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ingredient-search-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Find Recipes By Available Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: searchByIngredients,\n          className: \"ingredient-search-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredients-container\",\n            children: [ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredient-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: `Ingredient ${index + 1} (e.g., chicken, tomatoes)`,\n                  value: inputValues[index],\n                  onChange: e => handleIngredientInput(index, e.target.value),\n                  onFocus: () => {\n                    setActiveDropdownIndex(index);\n                    // Show suggestions immediately if there's text\n                    if (inputValues[index].trim() !== '') {\n                      const filtered = commonIngredients.filter(ingredient => ingredient.toLowerCase().includes(inputValues[index].toLowerCase())).slice(0, 5);\n                      setFilteredIngredients(filtered);\n                    }\n                  },\n                  onKeyDown: e => handleKeyDown(e, index),\n                  onBlur: () => setTimeout(() => {\n                    setActiveDropdownIndex(null);\n                    setSelectedSuggestionIndex(-1);\n                  }, 200),\n                  className: \"ingredient-input\",\n                  autoComplete: \"off\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 21\n                }, this), filteredIngredients.length > 0 && activeDropdownIndex === index && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ingredient-dropdown\",\n                  children: filteredIngredients.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `dropdown-item ${i === selectedSuggestionIndex ? 'selected' : ''}`,\n                    onClick: () => selectIngredient(index, item),\n                    children: item\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this), ingredients.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => removeIngredientField(index),\n                className: \"remove-ingredient-btn\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: addIngredientField,\n              className: \"add-ingredient-btn\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this), \" Add Ingredient\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"search-button ingredient-search-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-utensils\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), \" Find Recipes with Multiple Ingredients\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"api-note\",\n            children: \"Recipes will be sorted by most ingredient matches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-spinner fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), \" Loading recipes...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this) : recipes.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-grid\",\n          children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card recipe-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: recipe.image,\n              alt: recipe.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: recipe.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-clock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 27\n                }, this), \" \", recipe.readyInMinutes, \" mins\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-utensils\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 27\n                }, this), \" \", recipe.servings, \" servings\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 19\n            }, this), recipe.usedIngredientCount !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredient-match-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"used-ingredients\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-check\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 25\n                }, this), \" \", recipe.usedIngredientCount, \" ingredient\", recipe.usedIngredientCount !== 1 ? 's' : '', \" matched\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 23\n              }, this), recipe.matchedIngredients && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"matched-ingredients-list\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [\"Matched: \", recipe.matchedIngredients.join(', ')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 21\n            }, this), recipe.cuisines && recipe.cuisines.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-cuisines\",\n              children: recipe.cuisines.map((cuisine, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"cuisine-tag\",\n                children: cuisine\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/recipe/${recipe.id}`,\n              className: \"btn\",\n              children: \"View Recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 19\n            }, this)]\n          }, recipe.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : searchTerm || ingredients.some(ing => ing.trim() !== '') ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No recipes found. Try different ingredients or search terms.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"rP3kT1+ZptzWmXTb8hB/2Gh6tg8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Link","axios","commonIngredients","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","searchTerm","setSearchTerm","searchBy","setSearchBy","recipes","setRecipes","loading","setLoading","error","setError","ingredients","setIngredients","searchRecipes","e","preventDefault","setTimeout","mockRecipes","id","title","image","readyInMinutes","servings","cuisines","filteredRecipes","filter","recipe","term","toLowerCase","includes","some","cuisine","err","console","searchByIngredients","filteredIngredients","ing","trim","length","allRecipes","uniqueRecipeIds","Set","searchPromises","map","ingredient","get","encodeURIComponent","responses","Promise","all","forEach","response","index","data","meals","meal","has","idMeal","add","push","strMeal","strMealThumb","matchedIngredients","usedIngredientCount","missedIngredientCount","existingRecipe","find","r","sort","a","b","addIngredientField","setInputValues","inputValues","removeIngredientField","newIngredients","splice","newInputValues","handleIngredientChange","value","setFilteredIngredients","activeDropdownIndex","setActiveDropdownIndex","handleIngredientInput","filtered","slice","selectIngredient","selectedSuggestionIndex","setSelectedSuggestionIndex","handleKeyDown","key","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","onFocus","onKeyDown","onBlur","autoComplete","item","i","onClick","src","alt","undefined","join","to","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/recipeapp/src/pages/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Home.css';\r\nimport commonIngredients from '../data/commonIngredients';\r\n\r\nconst Home = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchBy, setSearchBy] = useState('name'); // 'name', 'ingredient', 'cuisine'\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // State for ingredient-based search\r\n  const [ingredients, setIngredients] = useState(['']);\r\n  // TheMealDB doesn't require an API key for the free tier\r\n\r\n  // For demo purposes, we'll use a mock API call\r\n  const searchRecipes = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // In a real app, you would use an actual API like:\r\n      // const response = await axios.get(`https://api.spoonacular.com/recipes/complexSearch?query=${searchTerm}&apiKey=YOUR_API_KEY`);\r\n      \r\n      // For demo, we'll simulate an API response\r\n      setTimeout(() => {\r\n        const mockRecipes = [\r\n          {\r\n            id: 1,\r\n            title: 'Spaghetti Carbonara',\r\n            image: 'https://images.unsplash.com/photo-1612874742237-6526221588e3?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1771&q=80',\r\n            readyInMinutes: 30,\r\n            servings: 4,\r\n            cuisines: ['Italian'],\r\n          },\r\n          {\r\n            id: 2,\r\n            title: 'Chicken Tikka Masala',\r\n            image: 'https://images.unsplash.com/photo-1565557623262-b51c2513a641?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1771&q=80',\r\n            readyInMinutes: 45,\r\n            servings: 6,\r\n            cuisines: ['Indian'],\r\n          },\r\n          {\r\n            id: 3,\r\n            title: 'Beef Tacos',\r\n            image: 'https://images.unsplash.com/photo-1551504734-5ee1c4a1479b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1770&q=80',\r\n            readyInMinutes: 25,\r\n            servings: 4,\r\n            cuisines: ['Mexican'],\r\n          },\r\n          {\r\n            id: 4,\r\n            title: 'Vegetable Stir Fry',\r\n            image: 'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1770&q=80',\r\n            readyInMinutes: 20,\r\n            servings: 2,\r\n            cuisines: ['Asian', 'Chinese'],\r\n          },\r\n        ];\r\n\r\n        // Filter based on search term (case insensitive)\r\n        const filteredRecipes = mockRecipes.filter(recipe => {\r\n          const term = searchTerm.toLowerCase();\r\n          if (searchBy === 'name') {\r\n            return recipe.title.toLowerCase().includes(term);\r\n          } else if (searchBy === 'cuisine') {\r\n            return recipe.cuisines.some(cuisine => cuisine.toLowerCase().includes(term));\r\n          }\r\n          // For ingredients, we would need ingredient data in a real app\r\n          return true;\r\n        });\r\n\r\n        setRecipes(filteredRecipes);\r\n        setLoading(false);\r\n      }, 1000); // Simulate network delay\r\n\r\n    } catch (err) {\r\n      setError('Failed to fetch recipes. Please try again.');\r\n      setLoading(false);\r\n      console.error('Error fetching recipes:', err);\r\n    }\r\n  };\r\n\r\n  // Function to search recipes by ingredients using TheMealDB API\r\n  const searchByIngredients = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    // Filter out empty ingredients\r\n    const filteredIngredients = ingredients.filter(ing => ing.trim() !== '');\r\n    \r\n    if (filteredIngredients.length === 0) {\r\n      setError('Please enter at least one ingredient');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let allRecipes = [];\r\n      let uniqueRecipeIds = new Set();\r\n      \r\n      // Create an array of promises for parallel API calls\r\n      const searchPromises = filteredIngredients.map(ingredient => {\r\n        // Use search.php endpoint which searches meal names\r\n        return axios.get(\r\n          `https://www.themealdb.com/api/json/v1/1/search.php?s=${encodeURIComponent(ingredient)}`\r\n        );\r\n      });\r\n      \r\n      // Execute all API calls in parallel\r\n      const responses = await Promise.all(searchPromises);\r\n      \r\n      // Process all responses\r\n      responses.forEach((response, index) => {\r\n        if (response.data.meals) {\r\n          response.data.meals.forEach(meal => {\r\n            // Only add if we haven't seen this recipe before\r\n            if (!uniqueRecipeIds.has(meal.idMeal)) {\r\n              uniqueRecipeIds.add(meal.idMeal);\r\n              \r\n              // Add the ingredient that matched this recipe\r\n              allRecipes.push({\r\n                id: meal.idMeal,\r\n                title: meal.strMeal,\r\n                image: meal.strMealThumb,\r\n                readyInMinutes: 30, // Default value\r\n                servings: 4, // Default value\r\n                cuisines: [], // TheMealDB doesn't provide cuisines in this endpoint\r\n                matchedIngredients: [filteredIngredients[index]],\r\n                usedIngredientCount: 1,\r\n                missedIngredientCount: 0\r\n              });\r\n            } else {\r\n              // If we've seen this recipe before, update the matched ingredients\r\n              const existingRecipe = allRecipes.find(r => r.id === meal.idMeal);\r\n              if (existingRecipe) {\r\n                existingRecipe.matchedIngredients.push(filteredIngredients[index]);\r\n                existingRecipe.usedIngredientCount = existingRecipe.matchedIngredients.length;\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n      \r\n      // Sort recipes by number of matched ingredients (descending)\r\n      allRecipes.sort((a, b) => b.usedIngredientCount - a.usedIngredientCount);\r\n      \r\n      if (allRecipes.length === 0) {\r\n        setError(`No recipes found with the provided ingredients. Try different ingredients.`);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      setRecipes(allRecipes);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Failed to fetch recipes. Please try again later.');\r\n      setLoading(false);\r\n      console.error('Error fetching recipes by ingredients:', err);\r\n    }\r\n  };\r\n\r\n  // Handle adding a new ingredient input field\r\n  const addIngredientField = () => {\r\n    setIngredients([...ingredients, '']);\r\n    setInputValues([...inputValues, '']);\r\n  };\r\n\r\n  // Handle removing an ingredient input field\r\n  const removeIngredientField = (index) => {\r\n    const newIngredients = [...ingredients];\r\n    newIngredients.splice(index, 1);\r\n    setIngredients(newIngredients);\r\n    \r\n    const newInputValues = [...inputValues];\r\n    newInputValues.splice(index, 1);\r\n    setInputValues(newInputValues);\r\n  };\r\n\r\n  // Handle ingredient input change\r\n  const handleIngredientChange = (index, value) => {\r\n    const newIngredients = [...ingredients];\r\n    newIngredients[index] = value;\r\n    setIngredients(newIngredients);\r\n  };\r\n\r\n  // Filter ingredients for dropdown based on input\r\n  const [filteredIngredients, setFilteredIngredients] = useState([]);\r\n  const [inputValues, setInputValues] = useState(['']);\r\n  const [activeDropdownIndex, setActiveDropdownIndex] = useState(null);\r\n  \r\n  const handleIngredientInput = (index, value) => {\r\n    const newInputValues = [...inputValues];\r\n    newInputValues[index] = value;\r\n    setInputValues(newInputValues);\r\n    \r\n    // Update the actual ingredient value\r\n    handleIngredientChange(index, value);\r\n    \r\n    // Filter ingredients based on input\r\n    if (value.trim() === '') {\r\n      setFilteredIngredients([]);\r\n    } else {\r\n      const filtered = commonIngredients.filter(ingredient => \r\n        ingredient.toLowerCase().includes(value.toLowerCase())\r\n      ).slice(0, 5); // Limit to 5 suggestions\r\n      setFilteredIngredients(filtered);\r\n      setActiveDropdownIndex(index);\r\n    }\r\n  };\r\n  \r\n  const selectIngredient = (index, ingredient) => {\r\n    handleIngredientChange(index, ingredient);\r\n    \r\n    const newInputValues = [...inputValues];\r\n    newInputValues[index] = ingredient;\r\n    setInputValues(newInputValues);\r\n    \r\n    setFilteredIngredients([]);\r\n    setActiveDropdownIndex(null);\r\n  };\r\n\r\n  // Handle keyboard navigation for dropdown\r\n  const [selectedSuggestionIndex, setSelectedSuggestionIndex] = useState(-1);\r\n\r\n  const handleKeyDown = (e, index) => {\r\n    if (filteredIngredients.length > 0 && activeDropdownIndex === index) {\r\n      switch (e.key) {\r\n        case 'ArrowDown':\r\n          e.preventDefault();\r\n          setSelectedSuggestionIndex(prev => \r\n            prev < filteredIngredients.length - 1 ? prev + 1 : prev\r\n          );\r\n          break;\r\n        case 'ArrowUp':\r\n          e.preventDefault();\r\n          setSelectedSuggestionIndex(prev => prev > 0 ? prev - 1 : 0);\r\n          break;\r\n        case 'Enter':\r\n          if (selectedSuggestionIndex >= 0) {\r\n            e.preventDefault();\r\n            selectIngredient(index, filteredIngredients[selectedSuggestionIndex]);\r\n            setSelectedSuggestionIndex(-1);\r\n          }\r\n          break;\r\n        case 'Escape':\r\n          setFilteredIngredients([]);\r\n          setActiveDropdownIndex(null);\r\n          setSelectedSuggestionIndex(-1);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  // We no longer need the API key handler since TheMealDB doesn't require an API key\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <div className=\"hero\">\r\n        <h1>Find Your Perfect Recipe</h1>\r\n        <p>Search thousands of recipes by name, ingredients</p>\r\n        \r\n        {/* Ingredient-based search form using TheMealDB API */}\r\n        <div className=\"ingredient-search-section\">\r\n          <h2>Find Recipes By Available Ingredients</h2>\r\n          <form onSubmit={searchByIngredients} className=\"ingredient-search-form\">\r\n            <div className=\"ingredients-container\">\r\n              {ingredients.map((ingredient, index) => (\r\n                <div key={index} className=\"ingredient-input-group\">\r\n                  <div className=\"dropdown-container\">\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder={`Ingredient ${index + 1} (e.g., chicken, tomatoes)`}\r\n                      value={inputValues[index]}\r\n                      onChange={(e) => handleIngredientInput(index, e.target.value)}\r\n                      onFocus={() => {\r\n                        setActiveDropdownIndex(index);\r\n                        // Show suggestions immediately if there's text\r\n                        if (inputValues[index].trim() !== '') {\r\n                          const filtered = commonIngredients.filter(ingredient => \r\n                            ingredient.toLowerCase().includes(inputValues[index].toLowerCase())\r\n                          ).slice(0, 5);\r\n                          setFilteredIngredients(filtered);\r\n                        }\r\n                      }}\r\n                      onKeyDown={(e) => handleKeyDown(e, index)}\r\n                      onBlur={() => setTimeout(() => {\r\n                        setActiveDropdownIndex(null);\r\n                        setSelectedSuggestionIndex(-1);\r\n                      }, 200)}\r\n                      className=\"ingredient-input\"\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {filteredIngredients.length > 0 && activeDropdownIndex === index && (\r\n                      <div className=\"ingredient-dropdown\">\r\n                        {filteredIngredients.map((item, i) => (\r\n                          <div \r\n                            key={i} \r\n                            className={`dropdown-item ${i === selectedSuggestionIndex ? 'selected' : ''}`}\r\n                            onClick={() => selectIngredient(index, item)}\r\n                          >\r\n                            {item}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {ingredients.length > 1 && (\r\n                    <button \r\n                      type=\"button\" \r\n                      onClick={() => removeIngredientField(index)}\r\n                      className=\"remove-ingredient-btn\"\r\n                    >\r\n                      <i className=\"fas fa-times\"></i>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              ))}\r\n              <button \r\n                type=\"button\" \r\n                onClick={addIngredientField}\r\n                className=\"add-ingredient-btn\"\r\n              >\r\n                <i className=\"fas fa-plus\"></i> Add Ingredient\r\n              </button>\r\n            </div>\r\n            \r\n            <button type=\"submit\" className=\"search-button ingredient-search-btn\">\r\n              <i className=\"fas fa-utensils\"></i> Find Recipes with Multiple Ingredients\r\n            </button> \r\n            <small className=\"api-note\">Recipes will be sorted by most ingredient matches</small>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"search-results\">\r\n        {loading ? (\r\n          <div className=\"loading\">\r\n            <i className=\"fas fa-spinner fa-spin\"></i> Loading recipes...\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"error\">{error}</div>\r\n        ) : recipes.length > 0 ? (\r\n          <>\r\n            <h2>Search Results</h2>\r\n            <div className=\"recipe-grid\">\r\n              {recipes.map((recipe) => (\r\n                <div key={recipe.id} className=\"card recipe-card\">\r\n                  <img src={recipe.image} alt={recipe.title} />\r\n                  <h3>{recipe.title}</h3>\r\n                  <div className=\"recipe-info\">\r\n                    <span><i className=\"far fa-clock\"></i> {recipe.readyInMinutes} mins</span>\r\n                    <span><i className=\"fas fa-utensils\"></i> {recipe.servings} servings</span>\r\n                  </div>\r\n                  {recipe.usedIngredientCount !== undefined && (\r\n                    <div className=\"ingredient-match-info\">\r\n                      <span className=\"used-ingredients\">\r\n                        <i className=\"fas fa-check\"></i> {recipe.usedIngredientCount} ingredient{recipe.usedIngredientCount !== 1 ? 's' : ''} matched\r\n                      </span>\r\n                      {recipe.matchedIngredients && (\r\n                        <div className=\"matched-ingredients-list\">\r\n                          <small>Matched: {recipe.matchedIngredients.join(', ')}</small>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  {recipe.cuisines && recipe.cuisines.length > 0 && (\r\n                    <div className=\"recipe-cuisines\">\r\n                      {recipe.cuisines.map((cuisine, index) => (\r\n                        <span key={index} className=\"cuisine-tag\">{cuisine}</span>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                  <Link to={`/recipe/${recipe.id}`} className=\"btn\">\r\n                    View Recipe\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        ) : searchTerm || ingredients.some(ing => ing.trim() !== '') ? (\r\n          <div className=\"no-results\">\r\n            <i className=\"fas fa-search\"></i>\r\n            <p>No recipes found. Try different ingredients or search terms.</p>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,iBAAiB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EAClD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACpD;;EAEA;EACA,MAAMsB,aAAa,GAAG,MAAOC,CAAC,IAAK;IACjCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF;MACA;;MAEA;MACAM,UAAU,CAAC,MAAM;QACf,MAAMC,WAAW,GAAG,CAClB;UACEC,EAAE,EAAE,CAAC;UACLC,KAAK,EAAE,qBAAqB;UAC5BC,KAAK,EAAE,wKAAwK;UAC/KC,cAAc,EAAE,EAAE;UAClBC,QAAQ,EAAE,CAAC;UACXC,QAAQ,EAAE,CAAC,SAAS;QACtB,CAAC,EACD;UACEL,EAAE,EAAE,CAAC;UACLC,KAAK,EAAE,sBAAsB;UAC7BC,KAAK,EAAE,wKAAwK;UAC/KC,cAAc,EAAE,EAAE;UAClBC,QAAQ,EAAE,CAAC;UACXC,QAAQ,EAAE,CAAC,QAAQ;QACrB,CAAC,EACD;UACEL,EAAE,EAAE,CAAC;UACLC,KAAK,EAAE,YAAY;UACnBC,KAAK,EAAE,qKAAqK;UAC5KC,cAAc,EAAE,EAAE;UAClBC,QAAQ,EAAE,CAAC;UACXC,QAAQ,EAAE,CAAC,SAAS;QACtB,CAAC,EACD;UACEL,EAAE,EAAE,CAAC;UACLC,KAAK,EAAE,oBAAoB;UAC3BC,KAAK,EAAE,wKAAwK;UAC/KC,cAAc,EAAE,EAAE;UAClBC,QAAQ,EAAE,CAAC;UACXC,QAAQ,EAAE,CAAC,OAAO,EAAE,SAAS;QAC/B,CAAC,CACF;;QAED;QACA,MAAMC,eAAe,GAAGP,WAAW,CAACQ,MAAM,CAACC,MAAM,IAAI;UACnD,MAAMC,IAAI,GAAG1B,UAAU,CAAC2B,WAAW,CAAC,CAAC;UACrC,IAAIzB,QAAQ,KAAK,MAAM,EAAE;YACvB,OAAOuB,MAAM,CAACP,KAAK,CAACS,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,IAAI,CAAC;UAClD,CAAC,MAAM,IAAIxB,QAAQ,KAAK,SAAS,EAAE;YACjC,OAAOuB,MAAM,CAACH,QAAQ,CAACO,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,IAAI,CAAC,CAAC;UAC9E;UACA;UACA,OAAO,IAAI;QACb,CAAC,CAAC;QAEFrB,UAAU,CAACkB,eAAe,CAAC;QAC3BhB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IAEZ,CAAC,CAAC,OAAOwB,GAAG,EAAE;MACZtB,QAAQ,CAAC,4CAA4C,CAAC;MACtDF,UAAU,CAAC,KAAK,CAAC;MACjByB,OAAO,CAACxB,KAAK,CAAC,yBAAyB,EAAEuB,GAAG,CAAC;IAC/C;EACF,CAAC;;EAED;EACA,MAAME,mBAAmB,GAAG,MAAOpB,CAAC,IAAK;IACvCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;;IAEd;IACA,MAAMyB,mBAAmB,GAAGxB,WAAW,CAACc,MAAM,CAACW,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;IAExE,IAAIF,mBAAmB,CAACG,MAAM,KAAK,CAAC,EAAE;MACpC5B,QAAQ,CAAC,sCAAsC,CAAC;MAChDF,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,IAAI;MACF,IAAI+B,UAAU,GAAG,EAAE;MACnB,IAAIC,eAAe,GAAG,IAAIC,GAAG,CAAC,CAAC;;MAE/B;MACA,MAAMC,cAAc,GAAGP,mBAAmB,CAACQ,GAAG,CAACC,UAAU,IAAI;QAC3D;QACA,OAAOnD,KAAK,CAACoD,GAAG,CACd,wDAAwDC,kBAAkB,CAACF,UAAU,CAAC,EACxF,CAAC;MACH,CAAC,CAAC;;MAEF;MACA,MAAMG,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACP,cAAc,CAAC;;MAEnD;MACAK,SAAS,CAACG,OAAO,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;QACrC,IAAID,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;UACvBH,QAAQ,CAACE,IAAI,CAACC,KAAK,CAACJ,OAAO,CAACK,IAAI,IAAI;YAClC;YACA,IAAI,CAACf,eAAe,CAACgB,GAAG,CAACD,IAAI,CAACE,MAAM,CAAC,EAAE;cACrCjB,eAAe,CAACkB,GAAG,CAACH,IAAI,CAACE,MAAM,CAAC;;cAEhC;cACAlB,UAAU,CAACoB,IAAI,CAAC;gBACdzC,EAAE,EAAEqC,IAAI,CAACE,MAAM;gBACftC,KAAK,EAAEoC,IAAI,CAACK,OAAO;gBACnBxC,KAAK,EAAEmC,IAAI,CAACM,YAAY;gBACxBxC,cAAc,EAAE,EAAE;gBAAE;gBACpBC,QAAQ,EAAE,CAAC;gBAAE;gBACbC,QAAQ,EAAE,EAAE;gBAAE;gBACduC,kBAAkB,EAAE,CAAC3B,mBAAmB,CAACiB,KAAK,CAAC,CAAC;gBAChDW,mBAAmB,EAAE,CAAC;gBACtBC,qBAAqB,EAAE;cACzB,CAAC,CAAC;YACJ,CAAC,MAAM;cACL;cACA,MAAMC,cAAc,GAAG1B,UAAU,CAAC2B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACjD,EAAE,KAAKqC,IAAI,CAACE,MAAM,CAAC;cACjE,IAAIQ,cAAc,EAAE;gBAClBA,cAAc,CAACH,kBAAkB,CAACH,IAAI,CAACxB,mBAAmB,CAACiB,KAAK,CAAC,CAAC;gBAClEa,cAAc,CAACF,mBAAmB,GAAGE,cAAc,CAACH,kBAAkB,CAACxB,MAAM;cAC/E;YACF;UACF,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;;MAEF;MACAC,UAAU,CAAC6B,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACP,mBAAmB,GAAGM,CAAC,CAACN,mBAAmB,CAAC;MAExE,IAAIxB,UAAU,CAACD,MAAM,KAAK,CAAC,EAAE;QAC3B5B,QAAQ,CAAC,4EAA4E,CAAC;QACtFF,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;MAEAF,UAAU,CAACiC,UAAU,CAAC;MACtB/B,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOwB,GAAG,EAAE;MACZtB,QAAQ,CAAC,kDAAkD,CAAC;MAC5DF,UAAU,CAAC,KAAK,CAAC;MACjByB,OAAO,CAACxB,KAAK,CAAC,wCAAwC,EAAEuB,GAAG,CAAC;IAC9D;EACF,CAAC;;EAED;EACA,MAAMuC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B3D,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE,EAAE,CAAC,CAAC;IACpC6D,cAAc,CAAC,CAAC,GAAGC,WAAW,EAAE,EAAE,CAAC,CAAC;EACtC,CAAC;;EAED;EACA,MAAMC,qBAAqB,GAAItB,KAAK,IAAK;IACvC,MAAMuB,cAAc,GAAG,CAAC,GAAGhE,WAAW,CAAC;IACvCgE,cAAc,CAACC,MAAM,CAACxB,KAAK,EAAE,CAAC,CAAC;IAC/BxC,cAAc,CAAC+D,cAAc,CAAC;IAE9B,MAAME,cAAc,GAAG,CAAC,GAAGJ,WAAW,CAAC;IACvCI,cAAc,CAACD,MAAM,CAACxB,KAAK,EAAE,CAAC,CAAC;IAC/BoB,cAAc,CAACK,cAAc,CAAC;EAChC,CAAC;;EAED;EACA,MAAMC,sBAAsB,GAAGA,CAAC1B,KAAK,EAAE2B,KAAK,KAAK;IAC/C,MAAMJ,cAAc,GAAG,CAAC,GAAGhE,WAAW,CAAC;IACvCgE,cAAc,CAACvB,KAAK,CAAC,GAAG2B,KAAK;IAC7BnE,cAAc,CAAC+D,cAAc,CAAC;EAChC,CAAC;;EAED;EACA,MAAM,CAACxC,mBAAmB,EAAE6C,sBAAsB,CAAC,GAAGzF,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACkF,WAAW,EAAED,cAAc,CAAC,GAAGjF,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACpD,MAAM,CAAC0F,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG3F,QAAQ,CAAC,IAAI,CAAC;EAEpE,MAAM4F,qBAAqB,GAAGA,CAAC/B,KAAK,EAAE2B,KAAK,KAAK;IAC9C,MAAMF,cAAc,GAAG,CAAC,GAAGJ,WAAW,CAAC;IACvCI,cAAc,CAACzB,KAAK,CAAC,GAAG2B,KAAK;IAC7BP,cAAc,CAACK,cAAc,CAAC;;IAE9B;IACAC,sBAAsB,CAAC1B,KAAK,EAAE2B,KAAK,CAAC;;IAEpC;IACA,IAAIA,KAAK,CAAC1C,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvB2C,sBAAsB,CAAC,EAAE,CAAC;IAC5B,CAAC,MAAM;MACL,MAAMI,QAAQ,GAAG1F,iBAAiB,CAAC+B,MAAM,CAACmB,UAAU,IAClDA,UAAU,CAAChB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACkD,KAAK,CAACnD,WAAW,CAAC,CAAC,CACvD,CAAC,CAACyD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACfL,sBAAsB,CAACI,QAAQ,CAAC;MAChCF,sBAAsB,CAAC9B,KAAK,CAAC;IAC/B;EACF,CAAC;EAED,MAAMkC,gBAAgB,GAAGA,CAAClC,KAAK,EAAER,UAAU,KAAK;IAC9CkC,sBAAsB,CAAC1B,KAAK,EAAER,UAAU,CAAC;IAEzC,MAAMiC,cAAc,GAAG,CAAC,GAAGJ,WAAW,CAAC;IACvCI,cAAc,CAACzB,KAAK,CAAC,GAAGR,UAAU;IAClC4B,cAAc,CAACK,cAAc,CAAC;IAE9BG,sBAAsB,CAAC,EAAE,CAAC;IAC1BE,sBAAsB,CAAC,IAAI,CAAC;EAC9B,CAAC;;EAED;EACA,MAAM,CAACK,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGjG,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1E,MAAMkG,aAAa,GAAGA,CAAC3E,CAAC,EAAEsC,KAAK,KAAK;IAClC,IAAIjB,mBAAmB,CAACG,MAAM,GAAG,CAAC,IAAI2C,mBAAmB,KAAK7B,KAAK,EAAE;MACnE,QAAQtC,CAAC,CAAC4E,GAAG;QACX,KAAK,WAAW;UACd5E,CAAC,CAACC,cAAc,CAAC,CAAC;UAClByE,0BAA0B,CAACG,IAAI,IAC7BA,IAAI,GAAGxD,mBAAmB,CAACG,MAAM,GAAG,CAAC,GAAGqD,IAAI,GAAG,CAAC,GAAGA,IACrD,CAAC;UACD;QACF,KAAK,SAAS;UACZ7E,CAAC,CAACC,cAAc,CAAC,CAAC;UAClByE,0BAA0B,CAACG,IAAI,IAAIA,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;UAC3D;QACF,KAAK,OAAO;UACV,IAAIJ,uBAAuB,IAAI,CAAC,EAAE;YAChCzE,CAAC,CAACC,cAAc,CAAC,CAAC;YAClBuE,gBAAgB,CAAClC,KAAK,EAAEjB,mBAAmB,CAACoD,uBAAuB,CAAC,CAAC;YACrEC,0BAA0B,CAAC,CAAC,CAAC,CAAC;UAChC;UACA;QACF,KAAK,QAAQ;UACXR,sBAAsB,CAAC,EAAE,CAAC;UAC1BE,sBAAsB,CAAC,IAAI,CAAC;UAC5BM,0BAA0B,CAAC,CAAC,CAAC,CAAC;UAC9B;QACF;UACE;MACJ;IACF;EACF,CAAC;;EAED;;EAEA,oBACE5F,OAAA;IAAKgG,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjG,OAAA;MAAKgG,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBjG,OAAA;QAAAiG,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjCrG,OAAA;QAAAiG,QAAA,EAAG;MAAgD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAGvDrG,OAAA;QAAKgG,SAAS,EAAC,2BAA2B;QAAAC,QAAA,gBACxCjG,OAAA;UAAAiG,QAAA,EAAI;QAAqC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9CrG,OAAA;UAAMsG,QAAQ,EAAEhE,mBAAoB;UAAC0D,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACrEjG,OAAA;YAAKgG,SAAS,EAAC,uBAAuB;YAAAC,QAAA,GACnClF,WAAW,CAACgC,GAAG,CAAC,CAACC,UAAU,EAAEQ,KAAK,kBACjCxD,OAAA;cAAiBgG,SAAS,EAAC,wBAAwB;cAAAC,QAAA,gBACjDjG,OAAA;gBAAKgG,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,gBACjCjG,OAAA;kBACEuG,IAAI,EAAC,MAAM;kBACXC,WAAW,EAAE,cAAchD,KAAK,GAAG,CAAC,4BAA6B;kBACjE2B,KAAK,EAAEN,WAAW,CAACrB,KAAK,CAAE;kBAC1BiD,QAAQ,EAAGvF,CAAC,IAAKqE,qBAAqB,CAAC/B,KAAK,EAAEtC,CAAC,CAACwF,MAAM,CAACvB,KAAK,CAAE;kBAC9DwB,OAAO,EAAEA,CAAA,KAAM;oBACbrB,sBAAsB,CAAC9B,KAAK,CAAC;oBAC7B;oBACA,IAAIqB,WAAW,CAACrB,KAAK,CAAC,CAACf,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;sBACpC,MAAM+C,QAAQ,GAAG1F,iBAAiB,CAAC+B,MAAM,CAACmB,UAAU,IAClDA,UAAU,CAAChB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC4C,WAAW,CAACrB,KAAK,CAAC,CAACxB,WAAW,CAAC,CAAC,CACpE,CAAC,CAACyD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;sBACbL,sBAAsB,CAACI,QAAQ,CAAC;oBAClC;kBACF,CAAE;kBACFoB,SAAS,EAAG1F,CAAC,IAAK2E,aAAa,CAAC3E,CAAC,EAAEsC,KAAK,CAAE;kBAC1CqD,MAAM,EAAEA,CAAA,KAAMzF,UAAU,CAAC,MAAM;oBAC7BkE,sBAAsB,CAAC,IAAI,CAAC;oBAC5BM,0BAA0B,CAAC,CAAC,CAAC,CAAC;kBAChC,CAAC,EAAE,GAAG,CAAE;kBACRI,SAAS,EAAC,kBAAkB;kBAC5Bc,YAAY,EAAC;gBAAK;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnB,CAAC,EACD9D,mBAAmB,CAACG,MAAM,GAAG,CAAC,IAAI2C,mBAAmB,KAAK7B,KAAK,iBAC9DxD,OAAA;kBAAKgG,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,EACjC1D,mBAAmB,CAACQ,GAAG,CAAC,CAACgE,IAAI,EAAEC,CAAC,kBAC/BhH,OAAA;oBAEEgG,SAAS,EAAE,iBAAiBgB,CAAC,KAAKrB,uBAAuB,GAAG,UAAU,GAAG,EAAE,EAAG;oBAC9EsB,OAAO,EAAEA,CAAA,KAAMvB,gBAAgB,CAAClC,KAAK,EAAEuD,IAAI,CAAE;oBAAAd,QAAA,EAE5Cc;kBAAI,GAJAC,CAAC;oBAAAd,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAKH,CACN;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CACN;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,EACLtF,WAAW,CAAC2B,MAAM,GAAG,CAAC,iBACrB1C,OAAA;gBACEuG,IAAI,EAAC,QAAQ;gBACbU,OAAO,EAAEA,CAAA,KAAMnC,qBAAqB,CAACtB,KAAK,CAAE;gBAC5CwC,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,eAEjCjG,OAAA;kBAAGgG,SAAS,EAAC;gBAAc;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B,CACT;YAAA,GA/CO7C,KAAK;cAAA0C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAgDV,CACN,CAAC,eACFrG,OAAA;cACEuG,IAAI,EAAC,QAAQ;cACbU,OAAO,EAAEtC,kBAAmB;cAC5BqB,SAAS,EAAC,oBAAoB;cAAAC,QAAA,gBAE9BjG,OAAA;gBAAGgG,SAAS,EAAC;cAAa;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,mBACjC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAENrG,OAAA;YAAQuG,IAAI,EAAC,QAAQ;YAACP,SAAS,EAAC,qCAAqC;YAAAC,QAAA,gBACnEjG,OAAA;cAAGgG,SAAS,EAAC;YAAiB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,2CACrC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTrG,OAAA;YAAOgG,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAC;UAAiD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENrG,OAAA;MAAKgG,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BtF,OAAO,gBACNX,OAAA;QAAKgG,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBjG,OAAA;UAAGgG,SAAS,EAAC;QAAwB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,uBAC5C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,GACJxF,KAAK,gBACPb,OAAA;QAAKgG,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEpF;MAAK;QAAAqF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,GAClC5F,OAAO,CAACiC,MAAM,GAAG,CAAC,gBACpB1C,OAAA,CAAAE,SAAA;QAAA+F,QAAA,gBACEjG,OAAA;UAAAiG,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBrG,OAAA;UAAKgG,SAAS,EAAC,aAAa;UAAAC,QAAA,EACzBxF,OAAO,CAACsC,GAAG,CAAEjB,MAAM,iBAClB9B,OAAA;YAAqBgG,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/CjG,OAAA;cAAKkH,GAAG,EAAEpF,MAAM,CAACN,KAAM;cAAC2F,GAAG,EAAErF,MAAM,CAACP;YAAM;cAAA2E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC7CrG,OAAA;cAAAiG,QAAA,EAAKnE,MAAM,CAACP;YAAK;cAAA2E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvBrG,OAAA;cAAKgG,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BjG,OAAA;gBAAAiG,QAAA,gBAAMjG,OAAA;kBAAGgG,SAAS,EAAC;gBAAc;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,KAAC,EAACvE,MAAM,CAACL,cAAc,EAAC,OAAK;cAAA;gBAAAyE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC1ErG,OAAA;gBAAAiG,QAAA,gBAAMjG,OAAA;kBAAGgG,SAAS,EAAC;gBAAiB;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,KAAC,EAACvE,MAAM,CAACJ,QAAQ,EAAC,WAAS;cAAA;gBAAAwE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxE,CAAC,EACLvE,MAAM,CAACqC,mBAAmB,KAAKiD,SAAS,iBACvCpH,OAAA;cAAKgG,SAAS,EAAC,uBAAuB;cAAAC,QAAA,gBACpCjG,OAAA;gBAAMgG,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,gBAChCjG,OAAA;kBAAGgG,SAAS,EAAC;gBAAc;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,KAAC,EAACvE,MAAM,CAACqC,mBAAmB,EAAC,aAAW,EAACrC,MAAM,CAACqC,mBAAmB,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,EAAC,UACvH;cAAA;gBAAA+B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,EACNvE,MAAM,CAACoC,kBAAkB,iBACxBlE,OAAA;gBAAKgG,SAAS,EAAC,0BAA0B;gBAAAC,QAAA,eACvCjG,OAAA;kBAAAiG,QAAA,GAAO,WAAS,EAACnE,MAAM,CAACoC,kBAAkB,CAACmD,IAAI,CAAC,IAAI,CAAC;gBAAA;kBAAAnB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3D,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CACN,EACAvE,MAAM,CAACH,QAAQ,IAAIG,MAAM,CAACH,QAAQ,CAACe,MAAM,GAAG,CAAC,iBAC5C1C,OAAA;cAAKgG,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAC7BnE,MAAM,CAACH,QAAQ,CAACoB,GAAG,CAAC,CAACZ,OAAO,EAAEqB,KAAK,kBAClCxD,OAAA;gBAAkBgG,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAE9D;cAAO,GAAvCqB,KAAK;gBAAA0C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAyC,CAC1D;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CACN,eACDrG,OAAA,CAACJ,IAAI;cAAC0H,EAAE,EAAE,WAAWxF,MAAM,CAACR,EAAE,EAAG;cAAC0E,SAAS,EAAC,KAAK;cAAAC,QAAA,EAAC;YAElD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GA5BCvE,MAAM,CAACR,EAAE;YAAA4E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA6Bd,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,eACN,CAAC,GACDhG,UAAU,IAAIU,WAAW,CAACmB,IAAI,CAACM,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,gBAC1DzC,OAAA;QAAKgG,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBjG,OAAA;UAAGgG,SAAS,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCrG,OAAA;UAAAiG,QAAA,EAAG;QAA4D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,GACJ;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjG,EAAA,CAtYID,IAAI;AAAAoH,EAAA,GAAJpH,IAAI;AAwYV,eAAeA,IAAI;AAAC,IAAAoH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
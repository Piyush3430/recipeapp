{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\recipeapp\\\\src\\\\pages\\\\AddRecipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AddRecipe.css';\nimport commonIngredients from '../data/commonIngredients';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddRecipe = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    title: '',\n    readyInMinutes: '',\n    servings: '',\n    cuisines: '',\n    summary: '',\n    instructions: '',\n    image: ''\n  });\n  const [ingredients, setIngredients] = useState([{\n    name: '',\n    amount: '',\n    unit: ''\n  }]);\n  const [submitted, setSubmitted] = useState(false);\n\n  // State for ingredient autocomplete\n  const [filteredIngredients, setFilteredIngredients] = useState([]);\n  const [activeDropdownIndex, setActiveDropdownIndex] = useState(null);\n  const [selectedSuggestionIndex, setSelectedSuggestionIndex] = useState(-1);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleIngredientChange = (index, field, value) => {\n    const updatedIngredients = [...ingredients];\n    updatedIngredients[index][field] = value;\n    setIngredients(updatedIngredients);\n\n    // If the field is 'name', handle autocomplete\n    if (field === 'name') {\n      handleIngredientInput(index, value);\n    }\n  };\n\n  // Filter ingredients for dropdown based on input\n  const handleIngredientInput = (index, value) => {\n    // Update the actual ingredient value is handled by handleIngredientChange\n\n    // Filter ingredients based on input\n    if (value.trim() === '') {\n      setFilteredIngredients([]);\n    } else {\n      const filtered = commonIngredients.filter(ingredient => ingredient.toLowerCase().includes(value.toLowerCase())).slice(0, 5); // Limit to 5 suggestions\n      setFilteredIngredients(filtered);\n      setActiveDropdownIndex(index);\n    }\n  };\n\n  // Select ingredient from dropdown\n  const selectIngredient = (index, ingredient) => {\n    const updatedIngredients = [...ingredients];\n    updatedIngredients[index].name = ingredient;\n    setIngredients(updatedIngredients);\n    setFilteredIngredients([]);\n    setActiveDropdownIndex(null);\n  };\n\n  // Handle keyboard navigation for dropdown\n  const handleKeyDown = (e, index) => {\n    if (filteredIngredients.length > 0 && activeDropdownIndex === index) {\n      switch (e.key) {\n        case 'ArrowDown':\n          e.preventDefault();\n          setSelectedSuggestionIndex(prev => prev < filteredIngredients.length - 1 ? prev + 1 : prev);\n          break;\n        case 'ArrowUp':\n          e.preventDefault();\n          setSelectedSuggestionIndex(prev => prev > 0 ? prev - 1 : 0);\n          break;\n        case 'Enter':\n          if (selectedSuggestionIndex >= 0) {\n            e.preventDefault();\n            selectIngredient(index, filteredIngredients[selectedSuggestionIndex]);\n            setSelectedSuggestionIndex(-1);\n          }\n          break;\n        case 'Escape':\n          setFilteredIngredients([]);\n          setActiveDropdownIndex(null);\n          setSelectedSuggestionIndex(-1);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n  const addIngredient = () => {\n    setIngredients([...ingredients, {\n      name: '',\n      amount: '',\n      unit: ''\n    }]);\n  };\n  const removeIngredient = index => {\n    if (ingredients.length > 1) {\n      const updatedIngredients = [...ingredients];\n      updatedIngredients.splice(index, 1);\n      setIngredients(updatedIngredients);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Create a new recipe object with form data\n    const newRecipe = {\n      id: Date.now(),\n      // Generate a unique ID using timestamp\n      title: formData.title,\n      readyInMinutes: parseInt(formData.readyInMinutes),\n      servings: parseInt(formData.servings),\n      cuisines: formData.cuisines.split(',').map(cuisine => cuisine.trim()).filter(cuisine => cuisine !== ''),\n      summary: formData.summary,\n      instructions: formData.instructions,\n      image: formData.image || 'https://via.placeholder.com/400x300?text=No+Image',\n      ingredients: ingredients.filter(ing => ing.name.trim() !== ''),\n      dateAdded: new Date().toISOString().split('T')[0] // Format: YYYY-MM-DD\n    };\n\n    // Get existing recipes from local storage or initialize empty array\n    const existingRecipes = JSON.parse(localStorage.getItem('savedRecipes')) || [];\n\n    // Add new recipe to the array\n    const updatedRecipes = [newRecipe, ...existingRecipes];\n\n    // Save updated recipes array to local storage\n    localStorage.setItem('savedRecipes', JSON.stringify(updatedRecipes));\n\n    // Show success message\n    setSubmitted(true);\n\n    // Reset form after 3 seconds and redirect to My Recipes\n    setTimeout(() => {\n      setFormData({\n        title: '',\n        readyInMinutes: '',\n        servings: '',\n        cuisines: '',\n        summary: '',\n        instructions: '',\n        image: ''\n      });\n      setIngredients([{\n        name: '',\n        amount: '',\n        unit: ''\n      }]);\n      setSubmitted(false);\n      navigate('/my-recipes');\n    }, 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-recipe-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add New Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Share your culinary creations with the world\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-check-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recipe Added Successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your recipe has been added to your collection.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"recipe-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Recipe Title*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"title\",\n              name: \"title\",\n              value: formData.title,\n              onChange: handleChange,\n              required: true,\n              placeholder: \"e.g. Homemade Chocolate Chip Cookies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"readyInMinutes\",\n                children: \"Cooking Time (minutes)*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"readyInMinutes\",\n                name: \"readyInMinutes\",\n                value: formData.readyInMinutes,\n                onChange: handleChange,\n                required: true,\n                min: \"1\",\n                placeholder: \"e.g. 30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"servings\",\n                children: \"Servings*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"servings\",\n                name: \"servings\",\n                value: formData.servings,\n                onChange: handleChange,\n                required: true,\n                min: \"1\",\n                placeholder: \"e.g. 4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cuisines\",\n              children: \"Cuisine(s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"cuisines\",\n              name: \"cuisines\",\n              value: formData.cuisines,\n              onChange: handleChange,\n              placeholder: \"e.g. Italian, Mediterranean (separate with commas)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image\",\n              children: \"Image URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"url\",\n              id: \"image\",\n              name: \"image\",\n              value: formData.image,\n              onChange: handleChange,\n              placeholder: \"https://example.com/image.jpg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"summary\",\n              children: \"Recipe Summary*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"summary\",\n              name: \"summary\",\n              value: formData.summary,\n              onChange: handleChange,\n              required: true,\n              placeholder: \"Brief description of your recipe\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Ingredients*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredients-container\",\n              children: [ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ingredient-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Amount\",\n                  value: ingredient.amount,\n                  onChange: e => handleIngredientChange(index, 'amount', e.target.value),\n                  className: \"ingredient-amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Unit\",\n                  value: ingredient.unit,\n                  onChange: e => handleIngredientChange(index, 'unit', e.target.value),\n                  className: \"ingredient-unit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropdown-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Ingredient name\",\n                    value: ingredient.name,\n                    onChange: e => handleIngredientChange(index, 'name', e.target.value),\n                    onFocus: () => {\n                      setActiveDropdownIndex(index);\n                      // Show suggestions immediately if there's text\n                      if (ingredient.name.trim() !== '') {\n                        const filtered = commonIngredients.filter(ing => ing.toLowerCase().includes(ingredient.name.toLowerCase())).slice(0, 5);\n                        setFilteredIngredients(filtered);\n                      }\n                    },\n                    onKeyDown: e => handleKeyDown(e, index),\n                    onBlur: () => setTimeout(() => {\n                      setActiveDropdownIndex(null);\n                      setSelectedSuggestionIndex(-1);\n                    }, 200),\n                    className: \"ingredient-name\",\n                    autoComplete: \"off\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 25\n                  }, this), filteredIngredients.length > 0 && activeDropdownIndex === index && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ingredient-dropdown\",\n                    children: filteredIngredients.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `dropdown-item ${i === selectedSuggestionIndex ? 'selected' : ''}`,\n                      onClick: () => selectIngredient(index, item),\n                      children: item\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"remove-ingredient-btn\",\n                  onClick: () => removeIngredient(index),\n                  disabled: ingredients.length === 1,\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-times\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"add-ingredient-btn\",\n                onClick: addIngredient,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-plus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this), \" Add Ingredient\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"instructions\",\n              children: \"Cooking Instructions*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"instructions\",\n              name: \"instructions\",\n              value: formData.instructions,\n              onChange: handleChange,\n              required: true,\n              placeholder: \"Step-by-step instructions for preparing the recipe\",\n              rows: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: () => navigate('/my-recipes'),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          children: \"Save Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(AddRecipe, \"1YSUBWGT8F9SNm0zkxZLBRPW7R4=\", false, function () {\n  return [useNavigate];\n});\n_c = AddRecipe;\nexport default AddRecipe;\nvar _c;\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"names":["React","useState","useNavigate","commonIngredients","jsxDEV","_jsxDEV","AddRecipe","_s","navigate","formData","setFormData","title","readyInMinutes","servings","cuisines","summary","instructions","image","ingredients","setIngredients","name","amount","unit","submitted","setSubmitted","filteredIngredients","setFilteredIngredients","activeDropdownIndex","setActiveDropdownIndex","selectedSuggestionIndex","setSelectedSuggestionIndex","handleChange","e","value","target","handleIngredientChange","index","field","updatedIngredients","handleIngredientInput","trim","filtered","filter","ingredient","toLowerCase","includes","slice","selectIngredient","handleKeyDown","length","key","preventDefault","prev","addIngredient","removeIngredient","splice","handleSubmit","newRecipe","id","Date","now","parseInt","split","map","cuisine","ing","dateAdded","toISOString","existingRecipes","JSON","parse","localStorage","getItem","updatedRecipes","setItem","stringify","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","required","placeholder","min","rows","onFocus","onKeyDown","onBlur","autoComplete","item","i","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/recipeapp/src/pages/AddRecipe.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AddRecipe.css';\nimport commonIngredients from '../data/commonIngredients';\n\nconst AddRecipe = () => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    title: '',\n    readyInMinutes: '',\n    servings: '',\n    cuisines: '',\n    summary: '',\n    instructions: '',\n    image: '',\n  });\n\n  const [ingredients, setIngredients] = useState([\n    { name: '', amount: '', unit: '' },\n  ]);\n\n  const [submitted, setSubmitted] = useState(false);\n  \n  // State for ingredient autocomplete\n  const [filteredIngredients, setFilteredIngredients] = useState([]);\n  const [activeDropdownIndex, setActiveDropdownIndex] = useState(null);\n  const [selectedSuggestionIndex, setSelectedSuggestionIndex] = useState(-1);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleIngredientChange = (index, field, value) => {\n    const updatedIngredients = [...ingredients];\n    updatedIngredients[index][field] = value;\n    setIngredients(updatedIngredients);\n    \n    // If the field is 'name', handle autocomplete\n    if (field === 'name') {\n      handleIngredientInput(index, value);\n    }\n  };\n  \n  // Filter ingredients for dropdown based on input\n  const handleIngredientInput = (index, value) => {\n    // Update the actual ingredient value is handled by handleIngredientChange\n    \n    // Filter ingredients based on input\n    if (value.trim() === '') {\n      setFilteredIngredients([]);\n    } else {\n      const filtered = commonIngredients.filter(ingredient => \n        ingredient.toLowerCase().includes(value.toLowerCase())\n      ).slice(0, 5); // Limit to 5 suggestions\n      setFilteredIngredients(filtered);\n      setActiveDropdownIndex(index);\n    }\n  };\n  \n  // Select ingredient from dropdown\n  const selectIngredient = (index, ingredient) => {\n    const updatedIngredients = [...ingredients];\n    updatedIngredients[index].name = ingredient;\n    setIngredients(updatedIngredients);\n    \n    setFilteredIngredients([]);\n    setActiveDropdownIndex(null);\n  };\n  \n  // Handle keyboard navigation for dropdown\n  const handleKeyDown = (e, index) => {\n    if (filteredIngredients.length > 0 && activeDropdownIndex === index) {\n      switch (e.key) {\n        case 'ArrowDown':\n          e.preventDefault();\n          setSelectedSuggestionIndex(prev => \n            prev < filteredIngredients.length - 1 ? prev + 1 : prev\n          );\n          break;\n        case 'ArrowUp':\n          e.preventDefault();\n          setSelectedSuggestionIndex(prev => prev > 0 ? prev - 1 : 0);\n          break;\n        case 'Enter':\n          if (selectedSuggestionIndex >= 0) {\n            e.preventDefault();\n            selectIngredient(index, filteredIngredients[selectedSuggestionIndex]);\n            setSelectedSuggestionIndex(-1);\n          }\n          break;\n        case 'Escape':\n          setFilteredIngredients([]);\n          setActiveDropdownIndex(null);\n          setSelectedSuggestionIndex(-1);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  const addIngredient = () => {\n    setIngredients([...ingredients, { name: '', amount: '', unit: '' }]);\n  };\n\n  const removeIngredient = (index) => {\n    if (ingredients.length > 1) {\n      const updatedIngredients = [...ingredients];\n      updatedIngredients.splice(index, 1);\n      setIngredients(updatedIngredients);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    // Create a new recipe object with form data\n    const newRecipe = {\n      id: Date.now(), // Generate a unique ID using timestamp\n      title: formData.title,\n      readyInMinutes: parseInt(formData.readyInMinutes),\n      servings: parseInt(formData.servings),\n      cuisines: formData.cuisines.split(',').map(cuisine => cuisine.trim()).filter(cuisine => cuisine !== ''),\n      summary: formData.summary,\n      instructions: formData.instructions,\n      image: formData.image || 'https://via.placeholder.com/400x300?text=No+Image',\n      ingredients: ingredients.filter(ing => ing.name.trim() !== ''),\n      dateAdded: new Date().toISOString().split('T')[0] // Format: YYYY-MM-DD\n    };\n    \n    // Get existing recipes from local storage or initialize empty array\n    const existingRecipes = JSON.parse(localStorage.getItem('savedRecipes')) || [];\n    \n    // Add new recipe to the array\n    const updatedRecipes = [newRecipe, ...existingRecipes];\n    \n    // Save updated recipes array to local storage\n    localStorage.setItem('savedRecipes', JSON.stringify(updatedRecipes));\n    \n    // Show success message\n    setSubmitted(true);\n    \n    // Reset form after 3 seconds and redirect to My Recipes\n    setTimeout(() => {\n      setFormData({\n        title: '',\n        readyInMinutes: '',\n        servings: '',\n        cuisines: '',\n        summary: '',\n        instructions: '',\n        image: '',\n      });\n      setIngredients([{ name: '', amount: '', unit: '' }]);\n      setSubmitted(false);\n      navigate('/my-recipes');\n    }, 3000);\n  };\n\n  return (\n    <div className=\"add-recipe-page\">\n      <div className=\"page-header\">\n        <h1>Add New Recipe</h1>\n        <p>Share your culinary creations with the world</p>\n      </div>\n\n      {submitted ? (\n        <div className=\"success-container\">\n          <div className=\"success-message\">\n            <i className=\"fas fa-check-circle\"></i>\n            <h2>Recipe Added Successfully!</h2>\n            <p>Your recipe has been added to your collection.</p>\n          </div>\n        </div>\n      ) : (\n        <form className=\"recipe-form\" onSubmit={handleSubmit}>\n          <div className=\"form-grid\">\n            <div className=\"form-left\">\n              <div className=\"form-control\">\n                <label htmlFor=\"title\">Recipe Title*</label>\n                <input\n                  type=\"text\"\n                  id=\"title\"\n                  name=\"title\"\n                  value={formData.title}\n                  onChange={handleChange}\n                  required\n                  placeholder=\"e.g. Homemade Chocolate Chip Cookies\"\n                />\n              </div>\n\n              <div className=\"form-row\">\n                <div className=\"form-control\">\n                  <label htmlFor=\"readyInMinutes\">Cooking Time (minutes)*</label>\n                  <input\n                    type=\"number\"\n                    id=\"readyInMinutes\"\n                    name=\"readyInMinutes\"\n                    value={formData.readyInMinutes}\n                    onChange={handleChange}\n                    required\n                    min=\"1\"\n                    placeholder=\"e.g. 30\"\n                  />\n                </div>\n\n                <div className=\"form-control\">\n                  <label htmlFor=\"servings\">Servings*</label>\n                  <input\n                    type=\"number\"\n                    id=\"servings\"\n                    name=\"servings\"\n                    value={formData.servings}\n                    onChange={handleChange}\n                    required\n                    min=\"1\"\n                    placeholder=\"e.g. 4\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-control\">\n                <label htmlFor=\"cuisines\">Cuisine(s)</label>\n                <input\n                  type=\"text\"\n                  id=\"cuisines\"\n                  name=\"cuisines\"\n                  value={formData.cuisines}\n                  onChange={handleChange}\n                  placeholder=\"e.g. Italian, Mediterranean (separate with commas)\"\n                />\n              </div>\n\n              <div className=\"form-control\">\n                <label htmlFor=\"image\">Image URL</label>\n                <input\n                  type=\"url\"\n                  id=\"image\"\n                  name=\"image\"\n                  value={formData.image}\n                  onChange={handleChange}\n                  placeholder=\"https://example.com/image.jpg\"\n                />\n              </div>\n\n              <div className=\"form-control\">\n                <label htmlFor=\"summary\">Recipe Summary*</label>\n                <textarea\n                  id=\"summary\"\n                  name=\"summary\"\n                  value={formData.summary}\n                  onChange={handleChange}\n                  required\n                  placeholder=\"Brief description of your recipe\"\n                  rows=\"3\"\n                ></textarea>\n              </div>\n            </div>\n\n            <div className=\"form-right\">\n              <div className=\"form-control\">\n                <label>Ingredients*</label>\n                <div className=\"ingredients-container\">\n                  {ingredients.map((ingredient, index) => (\n                    <div key={index} className=\"ingredient-row\">\n                      <input\n                        type=\"text\"\n                        placeholder=\"Amount\"\n                        value={ingredient.amount}\n                        onChange={(e) => handleIngredientChange(index, 'amount', e.target.value)}\n                        className=\"ingredient-amount\"\n                      />\n                      <input\n                        type=\"text\"\n                        placeholder=\"Unit\"\n                        value={ingredient.unit}\n                        onChange={(e) => handleIngredientChange(index, 'unit', e.target.value)}\n                        className=\"ingredient-unit\"\n                      />\n                      <div className=\"dropdown-container\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Ingredient name\"\n                          value={ingredient.name}\n                          onChange={(e) => handleIngredientChange(index, 'name', e.target.value)}\n                          onFocus={() => {\n                            setActiveDropdownIndex(index);\n                            // Show suggestions immediately if there's text\n                            if (ingredient.name.trim() !== '') {\n                              const filtered = commonIngredients.filter(ing => \n                                ing.toLowerCase().includes(ingredient.name.toLowerCase())\n                              ).slice(0, 5);\n                              setFilteredIngredients(filtered);\n                            }\n                          }}\n                          onKeyDown={(e) => handleKeyDown(e, index)}\n                          onBlur={() => setTimeout(() => {\n                            setActiveDropdownIndex(null);\n                            setSelectedSuggestionIndex(-1);\n                          }, 200)}\n                          className=\"ingredient-name\"\n                          autoComplete=\"off\"\n                          required\n                        />\n                        {filteredIngredients.length > 0 && activeDropdownIndex === index && (\n                          <div className=\"ingredient-dropdown\">\n                            {filteredIngredients.map((item, i) => (\n                              <div \n                                key={i} \n                                className={`dropdown-item ${i === selectedSuggestionIndex ? 'selected' : ''}`}\n                                onClick={() => selectIngredient(index, item)}\n                              >\n                                {item}\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                      <button\n                        type=\"button\"\n                        className=\"remove-ingredient-btn\"\n                        onClick={() => removeIngredient(index)}\n                        disabled={ingredients.length === 1}\n                      >\n                        <i className=\"fas fa-times\"></i>\n                      </button>\n                    </div>\n                  ))}\n                  <button\n                    type=\"button\"\n                    className=\"add-ingredient-btn\"\n                    onClick={addIngredient}\n                  >\n                    <i className=\"fas fa-plus\"></i> Add Ingredient\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"form-control\">\n                <label htmlFor=\"instructions\">Cooking Instructions*</label>\n                <textarea\n                  id=\"instructions\"\n                  name=\"instructions\"\n                  value={formData.instructions}\n                  onChange={handleChange}\n                  required\n                  placeholder=\"Step-by-step instructions for preparing the recipe\"\n                  rows=\"10\"\n                ></textarea>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-actions\">\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => navigate('/my-recipes')}>\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"btn\">\n              Save Recipe\n            </button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default AddRecipe;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
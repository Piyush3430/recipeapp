{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\recipeapp\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchBy, setSearchBy] = useState('name'); // 'name', 'ingredient', 'cuisine'\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // State for ingredient-based search\n  const [ingredients, setIngredients] = useState(['']);\n  // TheMealDB doesn't require an API key for the free tier\n\n  // For demo purposes, we'll use a mock API call\n  const searchRecipes = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      // In a real app, you would use an actual API like:\n      // const response = await axios.get(`https://api.spoonacular.com/recipes/complexSearch?query=${searchTerm}&apiKey=YOUR_API_KEY`);\n\n      // For demo, we'll simulate an API response\n      setTimeout(() => {\n        const mockRecipes = [{\n          id: 1,\n          title: 'Spaghetti Carbonara',\n          image: 'https://images.unsplash.com/photo-1612874742237-6526221588e3?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1771&q=80',\n          readyInMinutes: 30,\n          servings: 4,\n          cuisines: ['Italian']\n        }, {\n          id: 2,\n          title: 'Chicken Tikka Masala',\n          image: 'https://images.unsplash.com/photo-1565557623262-b51c2513a641?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1771&q=80',\n          readyInMinutes: 45,\n          servings: 6,\n          cuisines: ['Indian']\n        }, {\n          id: 3,\n          title: 'Beef Tacos',\n          image: 'https://images.unsplash.com/photo-1551504734-5ee1c4a1479b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1770&q=80',\n          readyInMinutes: 25,\n          servings: 4,\n          cuisines: ['Mexican']\n        }, {\n          id: 4,\n          title: 'Vegetable Stir Fry',\n          image: 'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1770&q=80',\n          readyInMinutes: 20,\n          servings: 2,\n          cuisines: ['Asian', 'Chinese']\n        }];\n\n        // Filter based on search term (case insensitive)\n        const filteredRecipes = mockRecipes.filter(recipe => {\n          const term = searchTerm.toLowerCase();\n          if (searchBy === 'name') {\n            return recipe.title.toLowerCase().includes(term);\n          } else if (searchBy === 'cuisine') {\n            return recipe.cuisines.some(cuisine => cuisine.toLowerCase().includes(term));\n          }\n          // For ingredients, we would need ingredient data in a real app\n          return true;\n        });\n        setRecipes(filteredRecipes);\n        setLoading(false);\n      }, 1000); // Simulate network delay\n    } catch (err) {\n      setError('Failed to fetch recipes. Please try again.');\n      setLoading(false);\n      console.error('Error fetching recipes:', err);\n    }\n  };\n\n  // Function to search recipes by ingredients using TheMealDB API\n  const searchByIngredients = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    // Filter out empty ingredients\n    const filteredIngredients = ingredients.filter(ing => ing.trim() !== '');\n    if (filteredIngredients.length === 0) {\n      setError('Please enter at least one ingredient');\n      setLoading(false);\n      return;\n    }\n    try {\n      let allRecipes = [];\n      let uniqueRecipeIds = new Set();\n\n      // Create an array of promises for parallel API calls\n      const searchPromises = filteredIngredients.map(ingredient => {\n        // Use search.php endpoint which searches meal names\n        return axios.get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${encodeURIComponent(ingredient)}`);\n      });\n\n      // Execute all API calls in parallel\n      const responses = await Promise.all(searchPromises);\n\n      // Process all responses\n      responses.forEach((response, index) => {\n        if (response.data.meals) {\n          response.data.meals.forEach(meal => {\n            // Only add if we haven't seen this recipe before\n            if (!uniqueRecipeIds.has(meal.idMeal)) {\n              uniqueRecipeIds.add(meal.idMeal);\n\n              // Add the ingredient that matched this recipe\n              allRecipes.push({\n                id: meal.idMeal,\n                title: meal.strMeal,\n                image: meal.strMealThumb,\n                readyInMinutes: 30,\n                // Default value\n                servings: 4,\n                // Default value\n                cuisines: [],\n                // TheMealDB doesn't provide cuisines in this endpoint\n                matchedIngredients: [filteredIngredients[index]],\n                usedIngredientCount: 1,\n                missedIngredientCount: 0\n              });\n            } else {\n              // If we've seen this recipe before, update the matched ingredients\n              const existingRecipe = allRecipes.find(r => r.id === meal.idMeal);\n              if (existingRecipe) {\n                existingRecipe.matchedIngredients.push(filteredIngredients[index]);\n                existingRecipe.usedIngredientCount = existingRecipe.matchedIngredients.length;\n              }\n            }\n          });\n        }\n      });\n\n      // Sort recipes by number of matched ingredients (descending)\n      allRecipes.sort((a, b) => b.usedIngredientCount - a.usedIngredientCount);\n      if (allRecipes.length === 0) {\n        setError(`No recipes found with the provided ingredients. Try different ingredients.`);\n        setLoading(false);\n        return;\n      }\n      setRecipes(allRecipes);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch recipes. Please try again later.');\n      setLoading(false);\n      console.error('Error fetching recipes by ingredients:', err);\n    }\n  };\n\n  // Handle adding a new ingredient input field\n  const addIngredientField = () => {\n    setIngredients([...ingredients, '']);\n  };\n\n  // Handle removing an ingredient input field\n  const removeIngredientField = index => {\n    const newIngredients = [...ingredients];\n    newIngredients.splice(index, 1);\n    setIngredients(newIngredients);\n  };\n\n  // Handle ingredient input change\n  const handleIngredientChange = (index, value) => {\n    const newIngredients = [...ingredients];\n    newIngredients[index] = value;\n    setIngredients(newIngredients);\n  };\n\n  // We no longer need the API key handler since TheMealDB doesn't require an API key\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Find Your Perfect Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Search thousands of recipes by name, ingredients, or cuisine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: searchRecipes,\n        className: \"search-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"searchBy\",\n              value: \"name\",\n              checked: searchBy === 'name',\n              onChange: () => setSearchBy('name')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), \"Recipe Name\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"searchBy\",\n              value: \"ingredient\",\n              checked: searchBy === 'ingredient',\n              onChange: () => setSearchBy('ingredient')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), \"Ingredient\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"searchBy\",\n              value: \"cuisine\",\n              checked: searchBy === 'cuisine',\n              onChange: () => setSearchBy('cuisine')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), \"Cuisine\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: `Search by ${searchBy}...`,\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            required: true,\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"search-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), \" Search\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ingredient-search-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Or Find Recipes By Available Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: searchByIngredients,\n          className: \"ingredient-search-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredients-container\",\n            children: [ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredient-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: `Ingredient ${index + 1} (e.g., apple, flour, chicken)`,\n                value: ingredient,\n                onChange: e => handleIngredientChange(index, e.target.value),\n                className: \"ingredient-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), ingredients.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => removeIngredientField(index),\n                className: \"remove-ingredient-btn\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: addIngredientField,\n              className: \"add-ingredient-btn\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this), \" Add Ingredient\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"search-button ingredient-search-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-utensils\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), \" Find Recipes with Multiple Ingredients\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"api-note\",\n            children: \"Recipes will be sorted by most ingredient matches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-spinner fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), \" Loading recipes...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this) : recipes.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-grid\",\n          children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card recipe-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: recipe.image,\n              alt: recipe.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: recipe.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-clock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 27\n                }, this), \" \", recipe.readyInMinutes, \" mins\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-utensils\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 27\n                }, this), \" \", recipe.servings, \" servings\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this), recipe.usedIngredientCount !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredient-match-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"used-ingredients\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-check\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 25\n                }, this), \" \", recipe.usedIngredientCount, \" ingredients used\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"missing-ingredients\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 25\n                }, this), \" \", recipe.missedIngredientCount, \" ingredients missing\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 21\n            }, this), recipe.cuisines && recipe.cuisines.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-cuisines\",\n              children: recipe.cuisines.map((cuisine, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"cuisine-tag\",\n                children: cuisine\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/recipe/${recipe.id}`,\n              className: \"btn\",\n              children: \"View Recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this)]\n          }, recipe.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : searchTerm || ingredients.some(ing => ing.trim() !== '') ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No recipes found. Try different ingredients or search terms.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"0u5I2wVFQ5u6u67G6C1Co054qkg=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Link","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","searchTerm","setSearchTerm","searchBy","setSearchBy","recipes","setRecipes","loading","setLoading","error","setError","ingredients","setIngredients","searchRecipes","e","preventDefault","setTimeout","mockRecipes","id","title","image","readyInMinutes","servings","cuisines","filteredRecipes","filter","recipe","term","toLowerCase","includes","some","cuisine","err","console","searchByIngredients","filteredIngredients","ing","trim","length","allRecipes","uniqueRecipeIds","Set","searchPromises","map","ingredient","get","encodeURIComponent","responses","Promise","all","forEach","response","index","data","meals","meal","has","idMeal","add","push","strMeal","strMealThumb","matchedIngredients","usedIngredientCount","missedIngredientCount","existingRecipe","find","r","sort","a","b","addIngredientField","removeIngredientField","newIngredients","splice","handleIngredientChange","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","checked","onChange","placeholder","target","required","onClick","src","alt","undefined","to","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/recipeapp/src/pages/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchBy, setSearchBy] = useState('name'); // 'name', 'ingredient', 'cuisine'\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // State for ingredient-based search\r\n  const [ingredients, setIngredients] = useState(['']);\r\n  // TheMealDB doesn't require an API key for the free tier\r\n\r\n  // For demo purposes, we'll use a mock API call\r\n  const searchRecipes = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // In a real app, you would use an actual API like:\r\n      // const response = await axios.get(`https://api.spoonacular.com/recipes/complexSearch?query=${searchTerm}&apiKey=YOUR_API_KEY`);\r\n      \r\n      // For demo, we'll simulate an API response\r\n      setTimeout(() => {\r\n        const mockRecipes = [\r\n          {\r\n            id: 1,\r\n            title: 'Spaghetti Carbonara',\r\n            image: 'https://images.unsplash.com/photo-1612874742237-6526221588e3?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1771&q=80',\r\n            readyInMinutes: 30,\r\n            servings: 4,\r\n            cuisines: ['Italian'],\r\n          },\r\n          {\r\n            id: 2,\r\n            title: 'Chicken Tikka Masala',\r\n            image: 'https://images.unsplash.com/photo-1565557623262-b51c2513a641?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1771&q=80',\r\n            readyInMinutes: 45,\r\n            servings: 6,\r\n            cuisines: ['Indian'],\r\n          },\r\n          {\r\n            id: 3,\r\n            title: 'Beef Tacos',\r\n            image: 'https://images.unsplash.com/photo-1551504734-5ee1c4a1479b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1770&q=80',\r\n            readyInMinutes: 25,\r\n            servings: 4,\r\n            cuisines: ['Mexican'],\r\n          },\r\n          {\r\n            id: 4,\r\n            title: 'Vegetable Stir Fry',\r\n            image: 'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1770&q=80',\r\n            readyInMinutes: 20,\r\n            servings: 2,\r\n            cuisines: ['Asian', 'Chinese'],\r\n          },\r\n        ];\r\n\r\n        // Filter based on search term (case insensitive)\r\n        const filteredRecipes = mockRecipes.filter(recipe => {\r\n          const term = searchTerm.toLowerCase();\r\n          if (searchBy === 'name') {\r\n            return recipe.title.toLowerCase().includes(term);\r\n          } else if (searchBy === 'cuisine') {\r\n            return recipe.cuisines.some(cuisine => cuisine.toLowerCase().includes(term));\r\n          }\r\n          // For ingredients, we would need ingredient data in a real app\r\n          return true;\r\n        });\r\n\r\n        setRecipes(filteredRecipes);\r\n        setLoading(false);\r\n      }, 1000); // Simulate network delay\r\n\r\n    } catch (err) {\r\n      setError('Failed to fetch recipes. Please try again.');\r\n      setLoading(false);\r\n      console.error('Error fetching recipes:', err);\r\n    }\r\n  };\r\n\r\n  // Function to search recipes by ingredients using TheMealDB API\r\n  const searchByIngredients = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    // Filter out empty ingredients\r\n    const filteredIngredients = ingredients.filter(ing => ing.trim() !== '');\r\n    \r\n    if (filteredIngredients.length === 0) {\r\n      setError('Please enter at least one ingredient');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let allRecipes = [];\r\n      let uniqueRecipeIds = new Set();\r\n      \r\n      // Create an array of promises for parallel API calls\r\n      const searchPromises = filteredIngredients.map(ingredient => {\r\n        // Use search.php endpoint which searches meal names\r\n        return axios.get(\r\n          `https://www.themealdb.com/api/json/v1/1/search.php?s=${encodeURIComponent(ingredient)}`\r\n        );\r\n      });\r\n      \r\n      // Execute all API calls in parallel\r\n      const responses = await Promise.all(searchPromises);\r\n      \r\n      // Process all responses\r\n      responses.forEach((response, index) => {\r\n        if (response.data.meals) {\r\n          response.data.meals.forEach(meal => {\r\n            // Only add if we haven't seen this recipe before\r\n            if (!uniqueRecipeIds.has(meal.idMeal)) {\r\n              uniqueRecipeIds.add(meal.idMeal);\r\n              \r\n              // Add the ingredient that matched this recipe\r\n              allRecipes.push({\r\n                id: meal.idMeal,\r\n                title: meal.strMeal,\r\n                image: meal.strMealThumb,\r\n                readyInMinutes: 30, // Default value\r\n                servings: 4, // Default value\r\n                cuisines: [], // TheMealDB doesn't provide cuisines in this endpoint\r\n                matchedIngredients: [filteredIngredients[index]],\r\n                usedIngredientCount: 1,\r\n                missedIngredientCount: 0\r\n              });\r\n            } else {\r\n              // If we've seen this recipe before, update the matched ingredients\r\n              const existingRecipe = allRecipes.find(r => r.id === meal.idMeal);\r\n              if (existingRecipe) {\r\n                existingRecipe.matchedIngredients.push(filteredIngredients[index]);\r\n                existingRecipe.usedIngredientCount = existingRecipe.matchedIngredients.length;\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n      \r\n      // Sort recipes by number of matched ingredients (descending)\r\n      allRecipes.sort((a, b) => b.usedIngredientCount - a.usedIngredientCount);\r\n      \r\n      if (allRecipes.length === 0) {\r\n        setError(`No recipes found with the provided ingredients. Try different ingredients.`);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      setRecipes(allRecipes);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Failed to fetch recipes. Please try again later.');\r\n      setLoading(false);\r\n      console.error('Error fetching recipes by ingredients:', err);\r\n    }\r\n  };\r\n\r\n  // Handle adding a new ingredient input field\r\n  const addIngredientField = () => {\r\n    setIngredients([...ingredients, '']);\r\n  };\r\n\r\n  // Handle removing an ingredient input field\r\n  const removeIngredientField = (index) => {\r\n    const newIngredients = [...ingredients];\r\n    newIngredients.splice(index, 1);\r\n    setIngredients(newIngredients);\r\n  };\r\n\r\n  // Handle ingredient input change\r\n  const handleIngredientChange = (index, value) => {\r\n    const newIngredients = [...ingredients];\r\n    newIngredients[index] = value;\r\n    setIngredients(newIngredients);\r\n  };\r\n\r\n  // We no longer need the API key handler since TheMealDB doesn't require an API key\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <div className=\"hero\">\r\n        <h1>Find Your Perfect Recipe</h1>\r\n        <p>Search thousands of recipes by name, ingredients, or cuisine</p>\r\n        \r\n        {/* Original search form */}\r\n        <form onSubmit={searchRecipes} className=\"search-form\">\r\n          <div className=\"search-options\">\r\n            <label>\r\n              <input \r\n                type=\"radio\" \r\n                name=\"searchBy\" \r\n                value=\"name\" \r\n                checked={searchBy === 'name'}\r\n                onChange={() => setSearchBy('name')} \r\n              />\r\n              Recipe Name\r\n            </label>\r\n            <label>\r\n              <input \r\n                type=\"radio\" \r\n                name=\"searchBy\" \r\n                value=\"ingredient\" \r\n                checked={searchBy === 'ingredient'}\r\n                onChange={() => setSearchBy('ingredient')} \r\n              />\r\n              Ingredient\r\n            </label>\r\n            <label>\r\n              <input \r\n                type=\"radio\" \r\n                name=\"searchBy\" \r\n                value=\"cuisine\" \r\n                checked={searchBy === 'cuisine'}\r\n                onChange={() => setSearchBy('cuisine')} \r\n              />\r\n              Cuisine\r\n            </label>\r\n          </div>\r\n          \r\n          <div className=\"search-input-container\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder={`Search by ${searchBy}...`}\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              required\r\n              className=\"search-input\"\r\n            />\r\n            <button type=\"submit\" className=\"search-button\">\r\n              <i className=\"fas fa-search\"></i> Search\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        {/* Ingredient-based search form using TheMealDB API */}\r\n        <div className=\"ingredient-search-section\">\r\n          <h2>Or Find Recipes By Available Ingredients</h2>\r\n          <form onSubmit={searchByIngredients} className=\"ingredient-search-form\">\r\n            <div className=\"ingredients-container\">\r\n              {ingredients.map((ingredient, index) => (\r\n                <div key={index} className=\"ingredient-input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder={`Ingredient ${index + 1} (e.g., apple, flour, chicken)`}\r\n                    value={ingredient}\r\n                    onChange={(e) => handleIngredientChange(index, e.target.value)}\r\n                    className=\"ingredient-input\"\r\n                  />\r\n                  {ingredients.length > 1 && (\r\n                    <button \r\n                      type=\"button\" \r\n                      onClick={() => removeIngredientField(index)}\r\n                      className=\"remove-ingredient-btn\"\r\n                    >\r\n                      <i className=\"fas fa-times\"></i>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              ))}\r\n              <button \r\n                type=\"button\" \r\n                onClick={addIngredientField}\r\n                className=\"add-ingredient-btn\"\r\n              >\r\n                <i className=\"fas fa-plus\"></i> Add Ingredient\r\n              </button>\r\n            </div>\r\n            \r\n            <button type=\"submit\" className=\"search-button ingredient-search-btn\">\r\n              <i className=\"fas fa-utensils\"></i> Find Recipes with Multiple Ingredients\r\n            </button>\r\n            <small className=\"api-note\">Recipes will be sorted by most ingredient matches</small>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"search-results\">\r\n        {loading ? (\r\n          <div className=\"loading\">\r\n            <i className=\"fas fa-spinner fa-spin\"></i> Loading recipes...\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"error\">{error}</div>\r\n        ) : recipes.length > 0 ? (\r\n          <>\r\n            <h2>Search Results</h2>\r\n            <div className=\"recipe-grid\">\r\n              {recipes.map((recipe) => (\r\n                <div key={recipe.id} className=\"card recipe-card\">\r\n                  <img src={recipe.image} alt={recipe.title} />\r\n                  <h3>{recipe.title}</h3>\r\n                  <div className=\"recipe-info\">\r\n                    <span><i className=\"far fa-clock\"></i> {recipe.readyInMinutes} mins</span>\r\n                    <span><i className=\"fas fa-utensils\"></i> {recipe.servings} servings</span>\r\n                  </div>\r\n                  {recipe.usedIngredientCount !== undefined && (\r\n                    <div className=\"ingredient-match-info\">\r\n                      <span className=\"used-ingredients\">\r\n                        <i className=\"fas fa-check\"></i> {recipe.usedIngredientCount} ingredients used\r\n                      </span>\r\n                      <span className=\"missing-ingredients\">\r\n                        <i className=\"fas fa-times\"></i> {recipe.missedIngredientCount} ingredients missing\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {recipe.cuisines && recipe.cuisines.length > 0 && (\r\n                    <div className=\"recipe-cuisines\">\r\n                      {recipe.cuisines.map((cuisine, index) => (\r\n                        <span key={index} className=\"cuisine-tag\">{cuisine}</span>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                  <Link to={`/recipe/${recipe.id}`} className=\"btn\">\r\n                    View Recipe\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        ) : searchTerm || ingredients.some(ing => ing.trim() !== '') ? (\r\n          <div className=\"no-results\">\r\n            <i className=\"fas fa-search\"></i>\r\n            <p>No recipes found. Try different ingredients or search terms.</p>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}